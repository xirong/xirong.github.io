<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>自由之路</title>
  
  <subtitle>学习科技理念，提升生活品质，追求思想自由之路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ixirong.com/"/>
  <updated>2017-08-09T16:18:50.000Z</updated>
  <id>http://www.ixirong.com/</id>
  
  <author>
    <name>xirong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>迁移 wordpress 博客主机</title>
    <link href="http://www.ixirong.com/2017/08/05/how-to-change-wordpress-server/"/>
    <id>http://www.ixirong.com/2017/08/05/how-to-change-wordpress-server/</id>
    <published>2017-08-05T11:23:19.000Z</published>
    <updated>2017-08-09T16:18:50.000Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><p>wordpress 博客迁移到新的服务器上，其实很简单，整机迁移即可，将数据库、wordpress博客文件打包压缩后，在新的服务器上启用就好了。但中间有一些细节，比如新采购的阿里云服务器，空机器，啥也没有，需要搭建 wordpress 的运行环境，对 php 等运行原理不怎么熟悉的人来说，浪费的很多时间。</p><p>需求如下，域名 abc.com 原来采用 <a href="https://www.hostinger.com.hk/" target="_blank" rel="noopener">https://www.hostinger.com.hk/</a> 的年费主机，之前采用的原因是方便，集成了 wordpress 环境，直接在后台页面操作就可以，关键是便宜些，比起国内的厂商便宜很多。hostinger有免费的主机， 推荐对速度性能要求不高的人来用一下。 现在打算将 abc.com 对应的博客迁移到阿里云上，购买的阿里云 ecs 服务器，空盘 centos 6.8 ；其实初始化时候可以直接从云市场购买 wordpress 的服务，不过后来才知道。</p><p>搭建 wordpress 的运营环境，我们知道 wordpress 是用 php 写的，所以很自然的想到 lnmp 架构，好在 lnmp 搭建很方便，<a href="https://lnmp.org/" target="_blank" rel="noopener">https://lnmp.org/</a> 按照说明安装即可，等待时间看网络情况了，我大概是20分钟左右。 这里提一下 lnmp 安装后软件都去了哪些目录: <a href="https://lnmp.org/faq/lnmp-software-list.html" target="_blank" rel="noopener">https://lnmp.org/faq/lnmp-software-list.html</a></p><a id="more"></a><h3 id="软件位置"><a href="#软件位置" class="headerlink" title="软件位置:"></a>软件位置:</h3><ul><li>Nginx：/usr/local/nginx/</li><li>MySQL：/usr/local/mysql/</li><li>MariaDB：/usr/local/mariadb/</li><li>PHP：/usr/local/php/</li><li>PHPMyAdmin：/home/wwwroot/default/phpmyadmin/</li><li>默认虚拟主机网站目录：/home/wwwroot/default/</li><li>Nginx日志目录：/home/wwwlogs/</li></ul><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><ul><li>Nginx主配置文件：/usr/local/nginx/conf/nginx.conf</li><li>MySQL/MariaDB配置文件：/etc/my.cnf</li><li>PHP配置文件：/usr/local/php/etc/php.ini</li><li>PHP-FPM配置文件：/usr/local/php/etc/php-fpm.conf</li><li>PureFtpd配置文件：/usr/local/pureftpd/etc/pure-ftpd.conf</li><li>Apache配置文件：/usr/local/apache/conf/httpd.conf</li></ul><p>lnmp 搭建好后，php、nginx、mysql 都已经起来好了，在原主机 hostinger 后台进行备份 db 和网站文件，下载对应的 zip 包，下载后上传到新的阿里云 ecs 上面，可以采用 scp 、rz、或者其它的 ssh 工具等。</p><h3 id="一、恢复-db-数据"><a href="#一、恢复-db-数据" class="headerlink" title="一、恢复 db 数据"></a>一、恢复 db 数据</h3><p>我安装的是 mariadb ，登录 : <code>/usr/local/mariadb/bin/mysql -u root -p</code>，输入安装时数据库的密码即可进入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[tester@ixirong bin]$ /usr/<span class="built_in">local</span>/mariadb/bin/mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 756</span><br><span class="line">Server version: 10.1.23-MariaDB Source distribution</span><br><span class="line">Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"><span class="comment"># 创建数据库，执行导出的 sql 文件，即可恢复网站数据</span></span><br><span class="line">MariaDB [(none)]&gt; create database testdb;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">MariaDB [(none)]&gt; use testdb;</span><br><span class="line">Database changed</span><br><span class="line">MariaDB [testdb]&gt;<span class="built_in">source</span> /home/tester/abc.com.sql</span><br></pre></td></tr></table></figure><h3 id="二、恢复网站-wordpress-文件"><a href="#二、恢复网站-wordpress-文件" class="headerlink" title="二、恢复网站 wordpress 文件"></a>二、恢复网站 wordpress 文件</h3><p>wordpress 备份恢复很简单，将原有 hostinger 主机上 public_html 目录下所有文件zip 包，拷贝到 ecs 虚拟机上面，解压缩即可，我放到了目录 <code>/home/tester/public_html</code>下面了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--  1 u783329617 u783329617   418 Sep 17  2016 index.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617 19935 Aug  5 08:03 license.txt</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  6956 Aug  5 08:03 readme.html</span><br><span class="line">-rwxrwxrwx  1 u783329617 u783329617 42385 Aug  4 22:42 sitemap_baidu.xml</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  5447 Aug  5 08:03 wp-activate.php</span><br><span class="line">drwxr-xr-x  9 u783329617 u783329617  4096 Sep 17  2016 wp-admin</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617   364 Sep 17  2016 wp-blog-header.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  1627 Aug  5 08:03 wp-comments-post.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  2930 Aug  5 08:03 wp-config-sample.php</span><br><span class="line">-rw-------  1 u783329617 u783329617  3519 Oct 21  2016 wp-config.php</span><br><span class="line">drwxr-xr-x 10 u783329617 u783329617  4096 Oct 21  2016 wp-content</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  3286 Sep 17  2016 wp-cron.php</span><br><span class="line">drwxr-xr-x 18 u783329617 u783329617 12288 Aug  5 08:03 wp-includes</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  8044 Sep 17  2016 wp-itapi.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  2422 Aug  5 08:03 wp-links-opml.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  3301 Aug  5 08:03 wp-load.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617 34327 Aug  5 08:03 wp-login.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  8048 Aug  5 08:03 wp-mail.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617 16200 Aug  5 08:03 wp-settings.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617 29924 Aug  5 08:03 wp-signup.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  4513 Aug  5 08:03 wp-trackback.php</span><br><span class="line">-rw-r--r--  1 u783329617 u783329617  3065 Aug  5 08:03 xmlrpc.php</span><br></pre></td></tr></table></figure><p>注意: <code>wp-config.php</code> 文件里面存储着 wordpress 的数据库连接串信息，及时根据自己刚才创建的 db 的数据库信息，库名、用户名、密码、前缀信息及时更新，不更新的话，待会 nginx 配置好后通过 <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a> 来访问创建也可以。</p><h3 id="三、nginx-配置可访问-wordpress-内容"><a href="#三、nginx-配置可访问-wordpress-内容" class="headerlink" title="三、nginx 配置可访问 wordpress 内容"></a>三、nginx 配置可访问 wordpress 内容</h3><p>这块是重点，比如配置后出现 403 forbidden，之前的博客内容出现404页，首页 500/502 打不开等都是配置不正确的原因。<br>在配置之前，先略微了解下原因，nginx 是无法解析 php 语言的内容的，所以需要 fast-cgi 模块来处理，关于 CGI、FastCGI、PHP-FPM、PHP-CGI 分别是什么，却别又是啥，应该用哪个 !<a href="http://www.awaimai.com/371.html" target="_blank" rel="noopener">http://www.awaimai.com/371.html</a></p><p>看完之后应该可以理解了，我们需要使用 php-fpm 来解析 php 程序，通过 nginx 将请求转发到 php-fpm 上来。<br>php-fpm 启动方式以及参数如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置地方，详情文件参考 https://wizardforcel.gitbooks.io/nginx-doc/content/Text/6.5_nginx_php_fpm.html</span></span><br><span class="line"><span class="comment"># /usr/local/php/etc/php-fpm.conf  </span></span><br><span class="line">[global]</span><br><span class="line">pid = /usr/<span class="built_in">local</span>/php/var/run/php-fpm.pid</span><br><span class="line">error_log = /usr/<span class="built_in">local</span>/php/var/<span class="built_in">log</span>/php-fpm.log</span><br><span class="line">log_level = notice</span><br><span class="line"></span><br><span class="line">[www]</span><br><span class="line">listen = /tmp/php-cgi.sock   <span class="comment">##注意这个地方很多教程上都是配置的 127.0.0.1:9000 </span></span><br><span class="line">listen.backlog = -1</span><br><span class="line">listen.allowed_clients = 127.0.0.1</span><br><span class="line">listen.owner = www</span><br><span class="line">listen.group = www</span><br><span class="line">listen.mode = 0666</span><br><span class="line">user = www</span><br><span class="line">group = www</span><br><span class="line">pm = dynamic</span><br><span class="line">pm.max_children = 20</span><br><span class="line">pm.start_servers = 10</span><br><span class="line">pm.min_spare_servers = 10</span><br><span class="line">pm.max_spare_servers = 20</span><br><span class="line">request_terminate_timeout = 100</span><br><span class="line">request_slowlog_timeout = 0</span><br><span class="line">slowlog = var/<span class="built_in">log</span>/slow.log</span><br></pre></td></tr></table></figure><p>如果需要重启的话，直接重新加载配置即可:<code>/etc/init.d/php-fpm reload</code></p><p>nginx 配置最终的配置如下，注意有注释的地方:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80 default_server;    </span><br><span class="line">        server_name _;    </span><br><span class="line">        index index.php;</span><br><span class="line">        root /home/u783329617/public_html;</span><br><span class="line">        <span class="comment">#error_page   404   /404.html;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># Deny access to PHP files in specific directory</span></span><br><span class="line">        <span class="comment">#location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span></span><br><span class="line"></span><br><span class="line">        include <span class="built_in">enable</span>-php.conf;  <span class="comment">##这是 php-fpm 对接的地方</span></span><br><span class="line">        include wordpress.conf;   <span class="comment">## 这是 wordpress 的配置，如果不加入，则会报404错误</span></span><br><span class="line">        access_log  /home/wwwlogs/access.log;</span><br><span class="line">    &#125;</span><br><span class="line">    include vhost/*.conf;  <span class="comment">##这是其它的域名配置</span></span><br></pre></td></tr></table></figure><p><strong>enable-php.conf</strong>、<strong>wordpress.conf</strong> 的配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># enable-php.conf</span></span><br><span class="line"> location ~ [^/]\.php(/|$)</span><br><span class="line">     &#123;</span><br><span class="line">         try_files <span class="variable">$uri</span> =404;</span><br><span class="line">         fastcgi_pass  unix:/tmp/php-cgi.sock; <span class="comment">#这个地方的配置要看/usr/local/php/etc/php-fpm.conf的 listen 处，很多教程配置都是 127.0.0.1:9000 </span></span><br><span class="line">         fastcgi_index index.php;</span><br><span class="line">         include fastcgi.conf;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># wordpress.conf</span></span><br><span class="line">location / &#123;</span><br><span class="line">     try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$args</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># Add trailing slash to */wp-admin requests.</span></span><br><span class="line"> rewrite /wp-admin$ <span class="variable">$scheme</span>://<span class="variable">$host</span><span class="variable">$uri</span>/ permanent;</span><br></pre></td></tr></table></figure><p>nginx 配置完成后重新加载文件 <code>/usr/local/nginx/sbin/nginx -s reload</code> 后直接访问 http:127.0.0.1 就能看到经典的 wordpress 的安装文件了。</p>]]></content>
    
    <summary type="html">
    
      &lt;!-- toc --&gt;

&lt;p&gt;wordpress 博客迁移到新的服务器上，其实很简单，整机迁移即可，将数据库、wordpress博客文件打包压缩后，在新的服务器上启用就好了。但中间有一些细节，比如新采购的阿里云服务器，空机器，啥也没有，需要搭建 wordpress 的运行环境，对 php 等运行原理不怎么熟悉的人来说，浪费的很多时间。&lt;/p&gt;
&lt;p&gt;需求如下，域名 abc.com 原来采用 &lt;a href=&quot;https://www.hostinger.com.hk/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.hostinger.com.hk/&lt;/a&gt; 的年费主机，之前采用的原因是方便，集成了 wordpress 环境，直接在后台页面操作就可以，关键是便宜些，比起国内的厂商便宜很多。hostinger有免费的主机， 推荐对速度性能要求不高的人来用一下。 现在打算将 abc.com 对应的博客迁移到阿里云上，购买的阿里云 ecs 服务器，空盘 centos 6.8 ；其实初始化时候可以直接从云市场购买 wordpress 的服务，不过后来才知道。&lt;/p&gt;
&lt;p&gt;搭建 wordpress 的运营环境，我们知道 wordpress 是用 php 写的，所以很自然的想到 lnmp 架构，好在 lnmp 搭建很方便，&lt;a href=&quot;https://lnmp.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://lnmp.org/&lt;/a&gt; 按照说明安装即可，等待时间看网络情况了，我大概是20分钟左右。 这里提一下 lnmp 安装后软件都去了哪些目录: &lt;a href=&quot;https://lnmp.org/faq/lnmp-software-list.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://lnmp.org/faq/lnmp-software-list.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="阿里云" scheme="http://www.ixirong.com/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="http://www.ixirong.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="wordpress" scheme="http://www.ixirong.com/tags/wordpress/"/>
    
      <category term="博客" scheme="http://www.ixirong.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>阿里云优惠码</title>
    <link href="http://www.ixirong.com/2017/07/24/aliyun-promotion/"/>
    <id>http://www.ixirong.com/2017/07/24/aliyun-promotion/</id>
    <published>2017-07-23T23:25:42.000Z</published>
    <updated>2020-03-07T09:40:58.002Z</updated>
    
    <content type="html"><![CDATA[<p>几个阿里云ECS、主机、数据库、Redis 的优惠码:</p><ul><li><a href="https://free.aliyun.com" target="_blank" rel="noopener">新用户免费6月套餐</a></li><li><a href="https://promotion.aliyun.com/ntms/act/ambassador/sharetouser.html?userCode=rse7dj9w&productCode=vm&utm_source=rse7dj9w" target="_blank" rel="noopener">云服务器ECS优惠券</a></li><li><a href="https://promotion.aliyun.com/ntms/act/ambassador/sharetouser.html?userCode=rse7dj9w&productCode=qingcloud&utm_source=rse7dj9w" target="_blank" rel="noopener">独享云虚拟主机</a></li><li><a href="https://promotion.aliyun.com/ntms/act/ambassador/sharetouser.html?userCode=rse7dj9w&productCode=prepaid_kvstore&utm_source=rse7dj9w" target="_blank" rel="noopener">云数据库Redis</a></li><li><a href="https://promotion.aliyun.com/ntms/act/ambassador/sharetouser.html?userCode=rse7dj9w&productCode=rds&utm_source=rse7dj9w" target="_blank" rel="noopener">关系型数据库RDS</a></li></ul><p>关于七牛云同步插件的使用方法参考： <a href="http://www.ixirong.com/2016/10/31/how-to-use-hexo-qiniu-sync-plugin/">http://www.ixirong.com/2016/10/31/how-to-use-hexo-qiniu-sync-plugin/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;几个阿里云ECS、主机、数据库、Redis 的优惠码:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://free.aliyun.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;新用户免费6月套餐&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="阿里云" scheme="http://www.ixirong.com/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    
      <category term="阿里云" scheme="http://www.ixirong.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="云服务器" scheme="http://www.ixirong.com/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>修改git历史的author和email</title>
    <link href="http://www.ixirong.com/2017/06/07/how-to-change-author-in-history/"/>
    <id>http://www.ixirong.com/2017/06/07/how-to-change-author-in-history/</id>
    <published>2017-06-07T14:30:53.000Z</published>
    <updated>2020-03-10T08:19:58.778Z</updated>
    
    <content type="html"><![CDATA[<p>Git 配置文件分为三级，系统级(–system)、用户级(–global)和目录级(–local)，三者的使用优先级以离目录 (repository)最近为原则，如果三者的配置不一样，则生效优先级 <strong>目录级&gt;用户级&gt;系统级</strong>，可以通过 <code>git config --help</code> 查看更多内容。</p><ul><li>系统级配置存储在 <code>/etc/gitconfig</code> 文件中，可以使用 <code>git config --system user.name &quot;jim&quot;</code> ,<code>git config --sytem user.email &quot;jim.jim@gmail.com&quot;</code> 来进行配置，该配置对系统上所有用户及他们所拥有的仓库都生效的配置值。</li><li>用户级存储在每个用户的 <code>~/.gitconfig</code> 中，可以使用 <code>git config --global user.name &quot;jim&quot;</code> ,<code>git config --global user.email &quot;jim.jim@gmail.com&quot;</code> 来进行配置，该配置对当前用户上所有的仓库有效。</li><li>目录级存储在每个仓库下的 <code>.git/config</code> 中，可以使用 <code>git config --local user.name &quot;jim&quot;</code> , <code>git config --local user.email &quot;jim.jim@gmail.com&quot;</code> 来进行配置，只对当前仓库生效。</li></ul><p>如果上次提交 msg 错误/有未提交的文件应该同上一次一起提交，需要重新提交备注：<code>git commit --amend -m &#39;new msg&#39;</code> </p><p>修改上次提交的 author、email可以使用 :<code>git commit --amend --author=&quot;newName &lt;newEmail&gt;&quot;</code></p><a id="more"></a><p>修改整个历史记录中的某些错误的 author、email有两种方式 <code>git rebase 或者 git filter-branch</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git rebase  模式</span></span><br><span class="line">git rebase -i -p 76892625a7b126f4772f8d7e331ada3552c11ce1 </span><br><span class="line"><span class="comment"># 弹出编辑器，在需要修改的 commit 处 由 picked 改变为 edit ，然后 wq 退出 vim；</span></span><br><span class="line">git commit --amend --author <span class="string">'newName &lt;newEmail&gt;'</span></span><br><span class="line"><span class="comment"># 执行后即变更了相应的 author 和 email </span></span><br><span class="line">git rebase --<span class="built_in">continue</span> </span><br><span class="line"><span class="comment">################################################################</span></span><br></pre></td></tr></table></figure><p><code>git rebase</code> 模式需要理解 git 的操作原理，步骤也比较多，可以直接使用 <code>git filter-branch</code>快速方便</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git filter-branch 模式 https://help.github.com/articles/changing-author-info/</span></span><br><span class="line"></span><br><span class="line">git filter-branch --env-filter <span class="string">'</span></span><br><span class="line"><span class="string">OLD_EMAIL="your-old-email@example.com"</span></span><br><span class="line"><span class="string">CORRECT_NAME="Your Correct Name"</span></span><br><span class="line"><span class="string">CORRECT_EMAIL="your-correct-email@example.com"</span></span><br><span class="line"><span class="string">if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    export GIT_COMMITTER_NAME="$CORRECT_NAME"</span></span><br><span class="line"><span class="string">    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]</span></span><br><span class="line"><span class="string">then</span></span><br><span class="line"><span class="string">    export GIT_AUTHOR_NAME="$CORRECT_NAME"</span></span><br><span class="line"><span class="string">    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">'</span> --tag-name-filter cat -- --branches --tags</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Git 配置文件分为三级，系统级(–system)、用户级(–global)和目录级(–local)，三者的使用优先级以离目录 (repository)最近为原则，如果三者的配置不一样，则生效优先级 &lt;strong&gt;目录级&amp;gt;用户级&amp;gt;系统级&lt;/strong&gt;，可以通过 &lt;code&gt;git config --help&lt;/code&gt; 查看更多内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统级配置存储在 &lt;code&gt;/etc/gitconfig&lt;/code&gt; 文件中，可以使用 &lt;code&gt;git config --system user.name &amp;quot;jim&amp;quot;&lt;/code&gt; ,&lt;code&gt;git config --sytem user.email &amp;quot;jim.jim@gmail.com&amp;quot;&lt;/code&gt; 来进行配置，该配置对系统上所有用户及他们所拥有的仓库都生效的配置值。&lt;/li&gt;
&lt;li&gt;用户级存储在每个用户的 &lt;code&gt;~/.gitconfig&lt;/code&gt; 中，可以使用 &lt;code&gt;git config --global user.name &amp;quot;jim&amp;quot;&lt;/code&gt; ,&lt;code&gt;git config --global user.email &amp;quot;jim.jim@gmail.com&amp;quot;&lt;/code&gt; 来进行配置，该配置对当前用户上所有的仓库有效。&lt;/li&gt;
&lt;li&gt;目录级存储在每个仓库下的 &lt;code&gt;.git/config&lt;/code&gt; 中，可以使用 &lt;code&gt;git config --local user.name &amp;quot;jim&amp;quot;&lt;/code&gt; , &lt;code&gt;git config --local user.email &amp;quot;jim.jim@gmail.com&amp;quot;&lt;/code&gt; 来进行配置，只对当前仓库生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果上次提交 msg 错误/有未提交的文件应该同上一次一起提交，需要重新提交备注：&lt;code&gt;git commit --amend -m &amp;#39;new msg&amp;#39;&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;修改上次提交的 author、email可以使用 :&lt;code&gt;git commit --amend --author=&amp;quot;newName &amp;lt;newEmail&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://www.ixirong.com/categories/git/"/>
    
    
      <category term="git" scheme="http://www.ixirong.com/tags/git/"/>
    
      <category term="版本控制" scheme="http://www.ixirong.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="gitconfig" scheme="http://www.ixirong.com/tags/gitconfig/"/>
    
  </entry>
  
  <entry>
    <title>如何加快下载百度网盘的文件</title>
    <link href="http://www.ixirong.com/2016/12/18/how-to-speed-up-baidu-disk-download/"/>
    <id>http://www.ixirong.com/2016/12/18/how-to-speed-up-baidu-disk-download/</id>
    <published>2016-12-18T11:19:42.000Z</published>
    <updated>2020-03-10T07:35:49.264Z</updated>
    
    <content type="html"><![CDATA[<p>其实目前 mac、window 下的百度云同步盘(百度网盘)下载同步速度已经可以了，加上会员可以在300<del>500kb 左右，一般的小型文件不需要折腾，但对于下载别人分享的大文件，比如500m 以上或者几个 G 的文件，这种速度下载耗时太长，<code>yangshun1029</code> 大牛就搞出来了客户端，下载速度达到 2</del>3M/s ，极大的节省了时间。原理上可以看我写的一篇文章 <a href="http://mp.weixin.qq.com/s?__biz=MzIzNzEzNDMxOA==&tempkey=hshiwX7MaWBda0wGMKR%2FNtUjpZX5GwRqvfVNMgtgkQDiddSzhzv8LUWDme4Us5dssV9o0nb7kpjv%2FsKor1fDekGcFgpFeol%2BRbBsQYIpM%2BVep5PHKDGrrmqPoVja5tnJKrnRrJ6Rl5B0na41ymVd7w%3D%3D&#rd" target="_blank" rel="noopener">突破限制，极速下载</a> 关于 Aria2 支持多协议命令行下载工具的介绍。<br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-25-59.jpg" alt=""></p><a id="more"></a><h2 id="下载-双击安装"><a href="#下载-双击安装" class="headerlink" title="下载-双击安装"></a>下载-双击安装</h2><p><code>Aria2GUI dmg</code>下载传送门 <a href="https://github.com/yangshun1029/aria2gui/releases" target="_blank" rel="noopener">https://github.com/yangshun1029/aria2gui/releases </a><br>注意: <strong>下载好后安装：每次下载东西的时候都需要先打开这个 Aria2GUI 客户端。</strong><br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-30-11.jpg" alt=""></p><p>安装浏览器百度云插件 <a href="https://github.com/acgotaku/BaiduExporter/releases" target="_blank" rel="noopener">https://github.com/acgotaku/BaiduExporter/releases</a> ，按照如下图所示下载文件夹内容，准备安装:<br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-32-15.jpg" alt=""></p><p>插件目前只有chrome版本在一直维护，所以，只适用于chrome浏览器，按照以下方法，安装完了以后，在百度云的下载界面会多出来一个“导出下载”的按钮，点击这个里面的”ARIA2 RPC”，下载任务会自动在Aria2GUI客户端中开始，注意: 一定要先打开 mac 下的Aria2GUI客户端哦。</p><p><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-35-03.jpg" alt=""></p><p>之后就能看到神一样子的速度了:</p><p><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-36-06.jpg" alt=""></p><p>插件安装方法:<br>方法一（直接安装crx文件）<br>直接将下载好的文件夹中的 <code>chrome.crx</code> 文件拖动到浏览器的 <code>扩展程序</code> 界面进行安装。<br>安装完毕后请参考：<a href="https://hencolle.com/2016/10/16/baidu_exporter/" target="_blank" rel="noopener">将非官方扩展程序加入chrome的白名单</a> 解决扩展程序失效停用的问题，<strong>这个方法比较麻烦，不推荐。</strong></p><p>方法二（开发者模式加载）<br>打开 chrome 的扩展程序界面，勾选 <code>开发者模式</code> 并点击刚显示出来的 <code>加载已解压的扩展程序</code> 按钮。如图：</p><p><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-38-23.jpg" alt=""><br>文件夹要选择解压出来的<code>chrome</code> ，如下图:<br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-38-39.jpg" alt=""></p><h2 id="命令行安装"><a href="#命令行安装" class="headerlink" title="命令行安装"></a>命令行安装</h2><p>参考文章: <a href="http://page.codespaper.com/2015/07/19/baiduyun-fastdown/" target="_blank" rel="noopener">http://page.codespaper.com/2015/07/19/baiduyun-fastdown/</a></p><p>如有问题，可公众号留言跟我联系。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实目前 mac、window 下的百度云同步盘(百度网盘)下载同步速度已经可以了，加上会员可以在300&lt;del&gt;500kb 左右，一般的小型文件不需要折腾，但对于下载别人分享的大文件，比如500m 以上或者几个 G 的文件，这种速度下载耗时太长，&lt;code&gt;yangshun1029&lt;/code&gt; 大牛就搞出来了客户端，下载速度达到 2&lt;/del&gt;3M/s ，极大的节省了时间。原理上可以看我写的一篇文章 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzIzNzEzNDMxOA==&amp;tempkey=hshiwX7MaWBda0wGMKR%2FNtUjpZX5GwRqvfVNMgtgkQDiddSzhzv8LUWDme4Us5dssV9o0nb7kpjv%2FsKor1fDekGcFgpFeol%2BRbBsQYIpM%2BVep5PHKDGrrmqPoVja5tnJKrnRrJ6Rl5B0na41ymVd7w%3D%3D&amp;#rd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;突破限制，极速下载&lt;/a&gt; 关于 Aria2 支持多协议命令行下载工具的介绍。&lt;br&gt;&lt;img data-src=&quot;http://ixirong.oss-cn-beijing.aliyuncs.com/baidusite/2016-12-18-19-25-59.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://www.ixirong.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="云网盘" scheme="http://www.ixirong.com/tags/%E4%BA%91%E7%BD%91%E7%9B%98/"/>
    
      <category term="百度云" scheme="http://www.ixirong.com/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Mac 键盘快捷键</title>
    <link href="http://www.ixirong.com/2016/11/11/mac-shortcut-in-common-use/"/>
    <id>http://www.ixirong.com/2016/11/11/mac-shortcut-in-common-use/</id>
    <published>2016-11-11T08:49:29.000Z</published>
    <updated>2020-03-10T08:24:34.509Z</updated>
    
    <content type="html"><![CDATA[<p>要使用键盘快捷键，请按住一个或多个修饰键，同时按快捷键的最后一个键。例如，要使用快捷键 Command-C（拷贝），请按住 Command 键并按 C 键，然后同时松开这两个键。Mac 菜单和键盘通常使用某些按键的符号，其中包括以下修饰键：</p><ul><li>Command ⌘</li><li>Shift ⇧</li><li>Option ⌥</li><li>Control ⌃</li><li>Caps Lock ⇪</li><li>Fn</li></ul><p>如果你使用的是 Windows PC 专用键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。有些 Mac 键盘在顶行中设有特殊按键，快捷键中也会用到它们；这些按键上有音量图标、显示屏亮度图标和其他功能图标。按下图标键可执行相应功能，将其与 Fn 键组合可用作 F1、F2、F3 或其他标准功能键。 (有福利在最后哦~)</p><a id="more"></a><p>[TOC]</p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">快捷键       | 描述</span><br><span class="line">Command-X | 剪切：删除所选项并将其拷贝到剪贴板。</span><br><span class="line">Command-C | 将所选项拷贝到剪贴板。这同样适用于 Finder 中的文件。</span><br><span class="line">Command-V | 将剪贴板的内容粘贴到当前文稿或 app 中。这同样适用于 Finder 中的文件。</span><br><span class="line">Command-Z | 撤销前一个命令。随后你可以按 Command-Shift-Z 来重做，从而反向执行撤销命令。在某些 app 中，你可以撤销和重做多个命令。</span><br><span class="line">Command-A | 全选各项。</span><br><span class="line">Command-F | 查找：打开“查找”窗口，或在文稿中查找项目。</span><br><span class="line">Command-G | 再次查找：查找之前所找到项目出现的下一个位置。要查找出现的上一个位置，请按 Command-Shift-G。</span><br><span class="line">Command-H | 隐藏最前面的 app 的窗口。要查看最前面的 app 但隐藏所有其他 app，请按 Command-Option-H。</span><br><span class="line">Command-M | 将最前面的窗口最小化至 Dock。要最小化最前面的 app 的所有窗口，请按 Command-Option-M。</span><br><span class="line">Command-N | 新建：打开一个新文稿或窗口。</span><br><span class="line">Command-O | 打开所选项，或打开一个对话框以选择要打开的文件。</span><br><span class="line">Command-P | 打印当前文稿。</span><br><span class="line">Command-S | 存储当前文稿。</span><br><span class="line">Command-W | 关闭最前面的窗口。要关闭该 app 的所有窗口，请按 Command-Option-W。</span><br><span class="line">Command-Q | 退出 app。</span><br><span class="line">Option-Command-Esc| 强制退出：选择要强制退出的 app。或者，按住 Command-Shift-Option-Esc 3 秒钟来仅强制最前面的 app 退出。</span><br><span class="line">Command–空格键| Spotlight：显示或隐藏 Spotlight 搜索栏。要从 Finder 窗口执行 Spotlight 搜索，请按 Command–Option–空格键。如果你使用多个输入源以便用不同的语言键入内容，这些快捷键会更改输入源而非显示 Spotlight。</span><br><span class="line">空格键| 快速查看：使用快速查看预览所选项。</span><br><span class="line">Command-Tab| 切换 app：在打开的 app 中切换到下一个最近使用的 app。</span><br><span class="line">Shift-Command-波浪号 (~)| 切换窗口：切换到最前端应用中下一个最近使用的窗口。</span><br><span class="line">Shift-Command-3| 屏幕快照：拍摄整个屏幕的屏幕快照。了解更多屏幕快照快捷键。</span><br><span class="line">Command-逗号 (,)| 偏好设置：打开最前面的 app 的偏好设置。</span><br></pre></td></tr></table></figure><h1 id="文档快捷键"><a href="#文档快捷键" class="headerlink" title="文档快捷键"></a>文档快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">  快捷键             | 描述</span><br><span class="line">Command-B| 以粗体显示所选文本，或者打开或关闭粗体显示功能。 </span><br><span class="line">Command-I| 以斜体显示所选文本，或者打开或关闭斜体显示功能。</span><br><span class="line">Command-U| 对所选文本加下划线，或者打开或关闭加下划线功能。</span><br><span class="line">Command-T| 显示或隐藏“字体”窗口.</span><br><span class="line">Command-D| 从“打开”对话框或“存储”对话框中选择“桌面”文件夹。</span><br><span class="line">Control-Command-D| 显示或隐藏所选字词的定义。</span><br><span class="line">Shift-Command-冒号 (:)| 显示“拼写和语法”窗口。</span><br><span class="line">Command-分号 (;)| 查找文稿中拼写错误的字词。</span><br><span class="line">Option-Delete| 删除插入点左边的字词。</span><br><span class="line">Control-H| 删除插入点左边的字符。也可以使用 Delete 键。</span><br><span class="line">Control-D| 删除插入点右边的字符。也可以使用 Fn-Delete。</span><br><span class="line">Fn-Delete| 在没有向前删除   键的键盘上向前删除。也可以使用 Control-D。</span><br><span class="line">Control-K| 删除插入点与行或段落末尾处之间的文本。</span><br><span class="line">Command-Delete| 在包含“删除”或“不存储”按钮的对话框中选择“删除”或“不存储”。</span><br><span class="line">Fn–上箭头| 向上翻页：向上滚动一页。 </span><br><span class="line">Fn–下箭头| 向下翻页：向下滚动一页。</span><br><span class="line">Fn–左箭头| 开头：滚动到文稿开头。</span><br><span class="line">Fn–右箭头| 结尾：滚动到文稿末尾。</span><br><span class="line">Command–上箭头| 将插入点移至文稿开头。</span><br><span class="line">Command–下箭头| 将插入点移至文稿末尾。</span><br><span class="line">Command–左箭头| 将插入点移至当前行的行首。</span><br><span class="line">Command–右箭头| 将插入点移至当前行的行尾。</span><br><span class="line">Option–左箭头| 将插入点移至上一字词的词首。</span><br><span class="line">Option–右箭头| 将插入点移至下一字词的词尾。</span><br><span class="line">Shift–Command–上箭头| 选中插入点与文稿开头之间的文本。</span><br><span class="line">Shift–Command–下箭头| 选中插入点与文稿末尾之间的文本。</span><br><span class="line">Shift–Command–左箭头| 选中插入点与当前行行首之间的文本。</span><br><span class="line">Shift–Command–右箭头| 选中插入点与当前行行尾之间的文本。</span><br><span class="line">Shift–上箭头 | 将文本选择范围扩展到上一行相同水平位置的最近字符处。</span><br><span class="line">Shift–下箭头 | 将文本选择范围扩展到下一行相同水平位置的最近字符处。</span><br><span class="line">Shift–左箭头 | 将文本选择范围向左扩展一个字符。</span><br><span class="line">Shift–右箭头 | 将文本选择范围向右扩展一个字符。</span><br><span class="line">Option–Shift–上箭头| 将文本选择范围扩展到当前段落的段首，再按一次则扩展到下一段落的段首。</span><br><span class="line">Option–Shift–下箭头| 将文本选择范围扩展到当前段落的段尾，再按一次则扩展到下一段落的段尾。</span><br><span class="line">Option–Shift–左箭头| 将文本选择范围扩展到当前字词的词首，再按一次则扩展到后一字词的词首。</span><br><span class="line">Option–Shift–右箭头| 将文本选择范围扩展到当前字词的词尾，再按一次则扩展到后一字词的词尾。</span><br><span class="line">Control-A| 移至行或段落的开头。</span><br><span class="line">Control-E| 移至行或段落的末尾。</span><br><span class="line">Control-F| 向前移动一个字符。</span><br><span class="line">Control-B| 向后移动一个字符。</span><br><span class="line">Control-L| 将光标或所选内容置于可见区域中央。</span><br><span class="line">Control-P| 上移一行。</span><br><span class="line">Control-N| 下移一行。</span><br><span class="line">Control-O| 在插入点后插入一行。</span><br><span class="line">Control-T| 将插入点后面的字符与插入点前面的字符交换。</span><br><span class="line">Command–左花括号 (&#123;)| 左对齐。</span><br><span class="line">Command–右花括号 (&#125;)| 右对齐。</span><br><span class="line">Shift–Command–竖线 | 居中对齐。</span><br><span class="line">Option-Command-F| 前往搜索栏。 </span><br><span class="line">Option-Command-T| 显示或隐藏应用中的工具栏。</span><br><span class="line">Option-Command-C| 拷贝样式：将所选项的格式设置拷贝到剪贴板。</span><br><span class="line">Option-Command-V| 粘贴样式：将拷贝的样式应用到所选项。</span><br><span class="line">Option-Shift-Command-V| 粘贴并匹配样式：将周围内容的样式应用到粘贴在该内容中的项目。</span><br><span class="line">Option-Command-I| 显示或隐藏检查器窗口。</span><br><span class="line">Shift-Command-P| 页面设置：显示用于选择文稿设置的窗口。</span><br><span class="line">Shift-Command-S| 显示“存储为”对话框或复制当前文稿。</span><br><span class="line">Shift–Command–减号 (-)   | 缩小所选项。</span><br><span class="line">Shift–Command–加号 (+)|放大所选项。Command–等号 (&#x3D;) 可执行相同的功能。</span><br><span class="line">Shift–Command–问号 (?)|打开“帮助”菜单。</span><br></pre></td></tr></table></figure><h1 id="截图操作"><a href="#截图操作" class="headerlink" title="截图操作"></a>截图操作</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">截图快捷键 | 含义</span><br><span class="line">command+shift+3 | 全屏截图，保存截图到桌面文件</span><br><span class="line">command+shift+4 | 鼠标选定区域截图，保存截图到桌面文件</span><br><span class="line">command+shift+control+3 | 全屏截图，保存到剪贴板</span><br><span class="line">command+shift+control+4 | 鼠标选定区域截图，保存到剪贴板</span><br><span class="line">command+shift(+control)+4 | 然后按下空格键，鼠标变成小相机，选择某一窗口后点击鼠标左键对单个窗口截图。不必担心其它窗口的遮挡。</span><br></pre></td></tr></table></figure><h1 id="Finder-快捷键"><a href="#Finder-快捷键" class="headerlink" title="Finder 快捷键"></a>Finder 快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">快捷键      |  描述</span><br><span class="line">Command-D| 复制所选文件。</span><br><span class="line">Command-E| 推出所选磁盘或宗卷。</span><br><span class="line">Command-F| 在 Finder 窗口中开始 Spotlight 搜索。</span><br><span class="line">Command-I| 显示所选文件的“显示简介”窗口。</span><br><span class="line">Shift-Command-C| 打开“电脑”窗口。</span><br><span class="line">Shift-Command-D| 打开“桌面”文件夹。</span><br><span class="line">Shift-Command-F| 打开“我的所有文件”窗口。</span><br><span class="line">Shift-Command-G| 打开“前往文件夹”窗口。</span><br><span class="line">Shift-Command-H| 打开当前 macOS 用户帐户的个人文件夹。</span><br><span class="line">Shift-Command-I| 打开 iCloud Drive。</span><br><span class="line">Shift-Command-K| 打开“网络”窗口。</span><br><span class="line">Option-Command-L| 打开“下载”文件夹。</span><br><span class="line">Shift-Command-O| 打开“文稿”文件夹。</span><br><span class="line">Shift-Command-R| 打开“AirDrop”窗口。</span><br><span class="line">Shift-Command-T| 将所选的 Finder 项目添加到 Dock（OS X Mountain Lion 或较早版本）</span><br><span class="line">Control-Shift-Command-T| 将所选的 Finder 项目添加到 Dock（OS X Mavericks 或更高版本）</span><br><span class="line">Shift-Command-U| 打开“实用工具”文件夹。</span><br><span class="line">Option-Command-D| 显示或隐藏 Dock。即使您未打开 Finder，此快捷键通常也有效。</span><br><span class="line">Control-Command-T| 将所选项添加到边栏（OS X Mavericks 或更高版本）。</span><br><span class="line">Option-Command-P| 隐藏或显示 Finder 窗口中的路径栏。</span><br><span class="line">Option-Command-S| 隐藏或显示 Finder 窗口中的边栏。</span><br><span class="line">Command–斜线 (&#x2F;) |隐藏或显示 Finder 窗口中的状态栏。</span><br><span class="line">Command-J| 调出“显示”选项。</span><br><span class="line">Command-K| 打开“连接服务器”窗口。</span><br><span class="line">Command-L| 为所选项制作替身。</span><br><span class="line">Command-N| 打开一个新的 Finder 窗口。</span><br><span class="line">Shift-Command-N| 新建文件夹。</span><br><span class="line">Option-Command-N |新建智能文件夹。</span><br><span class="line">Command-R| 显示所选替身的原始文件。</span><br><span class="line">Command-T| 在当前 Finder 窗口中打开单个标签时显示或隐藏标签栏。</span><br><span class="line">Shift-Command-T | 显示或隐藏 Finder 标签。</span><br><span class="line">Option-Command-T| 在当前 Finder 窗口中打开单个标签时显示或隐藏工具栏。</span><br><span class="line">Option-Command-V| 移动：将剪贴板中的文件从其原始位置移动到当前位置。</span><br><span class="line">Option-Command-Y| 显示所选文件的快速查看幻灯片显示。</span><br><span class="line">Command-Y| 使用“快速查看”预览所选文件。</span><br><span class="line">Command-1| 以图标方式显示 Finder 窗口中的项目。</span><br><span class="line">Command-2| 以列表方式显示 Finder 窗口中的项目。</span><br><span class="line">Command-3| 以分栏方式显示 Finder 窗口中的项目。 </span><br><span class="line">Command-4| 以 Cover Flow 方式显示 Finder 窗口中的项目。</span><br><span class="line">Command–左中括号 ([)| 前往上一文件夹。</span><br><span class="line">Command–右中括号 (])| 前往下一文件夹。</span><br><span class="line">Command–上箭头| 打开包含当前文件夹的文件夹。</span><br><span class="line">Command–Control–上箭头| 在新窗口中打开包含当前文件夹的文件夹。</span><br><span class="line">Command–下箭头| 打开所选项。</span><br><span class="line">Command–Mission Control| 显示桌面。即使您未打开 Finder，此快捷键也有效。</span><br><span class="line">Command–调高亮度| 开启或关闭目标显示器模式。</span><br><span class="line">Command–调低亮度| 当 Mac 连接到多个显示器时打开或关闭显示器镜像功能。</span><br><span class="line">右箭头 | 打开所选文件夹。此快捷键仅在列表视图中有效。</span><br><span class="line">左箭头| 关闭所选文件夹。此快捷键仅在列表视图中有效。</span><br><span class="line">Option-连按 | 在单独窗口中打开文件夹，并关闭当前窗口。</span><br><span class="line">Command-连按| 在单独标签或窗口中打开文件夹。</span><br><span class="line">Command-Delete| 将所选项移到废纸篓。</span><br><span class="line">Shift-Command-Delete| 清倒废纸篓。</span><br><span class="line">Option-Shift-Command-Delete| 清倒废纸篓（不显示确认对话框）。</span><br><span class="line">Command-Y| 使用“快速查看”预览文件。</span><br><span class="line">Option–调高亮度| 打开“显示器”偏好设置。此快捷键可与任一亮度键搭配使用。</span><br><span class="line">Option–Mission Control| 打开“Mission Control”偏好设置。</span><br><span class="line">Option–调高音量| 打开“声音”偏好设置。此快捷键可与任一音量键搭配使用。</span><br><span class="line">拖移时按 Command 键| 将拖移的项目移到其他宗卷或位置。拖移项目时指针会随之变化。</span><br><span class="line">拖移时按 Option 键| 拷贝拖移的项目。拖移项目时指针会随之变化。</span><br><span class="line">拖移时按下 Option-Command| 为拖移的项目制作替身。拖移项目时指针会随之变化。</span><br><span class="line">Option-点按伸缩三角形| 打开所选文件夹内的所有文件夹。此快捷键仅在列表视图中有效。</span><br><span class="line">Command-点按窗口标题| 查看包含当前文件夹的文件夹。</span><br></pre></td></tr></table></figure><h1 id="睡眠、注销和关机快捷键"><a href="#睡眠、注销和关机快捷键" class="headerlink" title="睡眠、注销和关机快捷键"></a>睡眠、注销和关机快捷键</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">快捷键      |        描述</span><br><span class="line">电源按钮   | 轻点可打开 Mac 或将 Mac 从睡眠状态唤醒。  当 Mac 处于唤醒状态时，按住此按钮 1.5 秒钟会显示一个对话框，询问您是要重新启动、睡眠还是关机。如果您不想等待 1.5 秒钟，请按下 Control–电源按钮或 Control–介质推出键 。按住此按钮 5 秒钟会强制 Mac 关机。</span><br><span class="line">Control–Command–电源按钮 | 强制 Mac 重新启动。</span><br><span class="line">Control–Shift–（电源按钮或介质推出键 ） | 将显示器置于睡眠状态。</span><br><span class="line">Control–Command–介质推出键  | 退出所有 app，然后重新启动 Mac。如果任何打开的文稿有未存储的更改，系统将询问您是否要存储这些更改。</span><br><span class="line">Control–Option–Command–（电源按钮或介质推出键 ） | 退出所有 app，然后关闭 Mac。如果任何打开的文稿有未存储的更改，系统将询问您是否要存储这些更改。</span><br><span class="line">Shift-Command-Q | 注销您的 macOS 用户帐户。系统将提示您确认。</span><br><span class="line">Option-Shift-Command-Q | 立即注销您的 macOS 用户帐户，且系统不提示您确认。</span><br></pre></td></tr></table></figure><h1 id="Mac-的启动组合键"><a href="#Mac-的启动组合键" class="headerlink" title="Mac 的启动组合键"></a>Mac 的启动组合键</h1><p>在启动期间按住某些键可以使用一些 Mac 功能。 请在 Mac 开机并听到启动声后立即按住这些键。请一直按住，直至所述行为出现。以下组合适用于基于 Intel 的 Mac 电脑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">在启动期间按住 | 描述</span><br><span class="line">Shift ⇧ | 以安全模式启动。</span><br><span class="line">Option ⌥ | 启动进入启动管理器。</span><br><span class="line">C | 从可引导的 CD、DVD 或 USB 闪存驱动器（如 OS X 安装介质）启动。</span><br><span class="line">D | 启动进入 Apple Hardware Test 或 Apple Diagnostics，具体取决于您正在使用的 Mac。</span><br><span class="line">Option-D | 通过互联网启动进入 Apple Hardware Test 或 Apple Diagnostics。</span><br><span class="line">N | 从兼容的 NetBoot 服务器启动。</span><br><span class="line">Option-N | 使用默认的启动映像从 NetBoot 服务器启动。</span><br><span class="line">Command (⌘)-R | 从 OS X 恢复功能启动。</span><br><span class="line">Command-Option-R | 通过互联网从 OS X 恢复功能启动。</span><br><span class="line">Command-Option-P-R | 重置 NVRAM。当再次听到启动声后，请松开这些键。</span><br><span class="line">Command-S | 以单用户模式启动。</span><br><span class="line">T | 以目标磁盘模式启动。</span><br><span class="line">X | 从 OS X 启动宗卷启动，否则 Mac 将从非 OS X 启动宗卷启动。</span><br><span class="line">Command-V | 以详细模式启动。</span><br><span class="line">推出键 (⏏)、F12、鼠标键或触控板按钮 | 推出可移动介质，如光盘。</span><br></pre></td></tr></table></figure><p>整理了那么多快捷键，一时半时根本记不住，怎么办？除了有意识的经常使用、练习外，还有一款神奇软件 <a href="https://www.mediaatelier.com/CheatSheet/" target="_blank" rel="noopener">CheatSheet</a> 在任何应用程序下面长按<code>Command ⌘</code> 键，即可以查看这款软件的快捷键操作。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要使用键盘快捷键，请按住一个或多个修饰键，同时按快捷键的最后一个键。例如，要使用快捷键 Command-C（拷贝），请按住 Command 键并按 C 键，然后同时松开这两个键。Mac 菜单和键盘通常使用某些按键的符号，其中包括以下修饰键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Command ⌘&lt;/li&gt;
&lt;li&gt;Shift ⇧&lt;/li&gt;
&lt;li&gt;Option ⌥&lt;/li&gt;
&lt;li&gt;Control ⌃&lt;/li&gt;
&lt;li&gt;Caps Lock ⇪&lt;/li&gt;
&lt;li&gt;Fn&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你使用的是 Windows PC 专用键盘，请用 Alt 键代替 Option 键，用 Windows 标志键代替 Command 键。有些 Mac 键盘在顶行中设有特殊按键，快捷键中也会用到它们；这些按键上有音量图标、显示屏亮度图标和其他功能图标。按下图标键可执行相应功能，将其与 Fn 键组合可用作 F1、F2、F3 或其他标准功能键。 (有福利在最后哦~)&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://www.ixirong.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="mac" scheme="http://www.ixirong.com/tags/mac/"/>
    
      <category term="效率" scheme="http://www.ixirong.com/tags/%E6%95%88%E7%8E%87/"/>
    
      <category term="快捷键" scheme="http://www.ixirong.com/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>使用 Proxifier 解决 Google photo backup/Google drive mac 无法连接错误</title>
    <link href="http://www.ixirong.com/2016/11/08/fix-google-photo-problem-by-proxifer-and-shadowsocks/"/>
    <id>http://www.ixirong.com/2016/11/08/fix-google-photo-problem-by-proxifer-and-shadowsocks/</id>
    <published>2016-11-08T03:39:56.000Z</published>
    <updated>2020-03-10T08:19:23.947Z</updated>
    
    <content type="html"><![CDATA[<p>google photo backup there was a problem to authorization，google drive unable to connect mac 等错误信息， 分析了下原因是这里两个 app 的连接不支持上层的 http、sock 代理，如果使用需要在 tcp 层面进行代理，这时候 Proxifier 就出现了。</p><blockquote><p>Proxifier allows network applications that do not support working through proxy servers to operate through a SOCKS or HTTPS proxy and chains.<br>The most advanced proxy client 。<a href="https://www.proxifier.com/index.htm" target="_blank" rel="noopener">https://www.proxifier.com/index.htm</a></p></blockquote><p>Proxifier是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持 64位系统，支持Xp，Vista，Win7，MAC OS ,支持socks4，socks5，http代理协议，支持TCP，UDP协议，可以指定端口，指定IP，指定域名,指定程序等运行模式，兼容性非常好，和SOCKSCAP属于同类软件，不过SOCKSCAP已经很久没更新了，不支持64位系统。 有许多网络应用程序不支持通过代理服务器工作，Proxifier 解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外，它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。</p><a id="more"></a><p>特性如下:</p><ul><li>通过代理服务器运行任何网络应用程序。对于软件不需要有什么特殊配置；整个过程是完全透明的。</li><li>通过代理服务器网关访问受限制的网络。</li><li>绕过防火墙的限制。</li><li>”隧道”整个系统 （强制所有网络连接，包括系统工作都通过代理服务器连接）。</li><li>通过代理服务器解析 DNS 名称。</li><li>灵活的代理规则，对于主机名和应用程序名称可使用通配符。</li><li>通过隐藏您的 IP 地址的获得安全隐私。</li><li>通过代理服务器链来工作，可使用不同的协议。</li><li>查看当前网络活动的实时信息（连接，主机，时间，带宽使用等）。</li><li>维护日志文件和流量转储。</li><li>获得详细的网络错误报告。<br>官网地址：<a href="http://www.proxifier.com/" target="_blank" rel="noopener">http://www.proxifier.com/</a><br>下载地址：<a href="http://www.proxifier.com/download.htm" target="_blank" rel="noopener">http://www.proxifier.com/download.htm</a></li></ul><h1 id="二、实现方法"><a href="#二、实现方法" class="headerlink" title="二、实现方法"></a>二、实现方法</h1><h2 id="1、Shadowsocks"><a href="#1、Shadowsocks" class="headerlink" title="1、Shadowsocks"></a>1、Shadowsocks</h2><p>Shadowsocks使用方法很简单，比如我使用的shadowsocks-gui，下载解压之后直接运行shadowsocks.exe，根据图片上的说明进行设置</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks2.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks2.png" alt=""></a></p><p>填写完成后点击”Save”,如提示界面上提示蓝色的”local listening at 127.0.0.1:8585″表示连接成功。 帐号信息可以通过<a href="http://www.ixirong.com/2015/01/19/shadowsocks-md/">这里获取</a>，当然，你也可以架设到自己的VPS上，具体架设流程请参考官方，这里略过。</p><h2 id="2、Proxifier"><a href="#2、Proxifier" class="headerlink" title="2、Proxifier"></a>2、Proxifier</h2><p>此软件为收费软件，不过这里提供几个注册码，直接安装注册即可,软件分为<strong>Standard Edition</strong>和<strong>Portable Edition</strong>版本，注册码不通用，注册用户名任意。 L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C（<strong>Portable Edition</strong>） 5EZ8G-C3WL5-B56YG-SCXM9-6QZAP（<strong>Standard Edition</strong>）</p><h2 id="①-添加代理信息"><a href="#①-添加代理信息" class="headerlink" title="①.添加代理信息"></a><strong>①.添加代理信息</strong></h2><p>打开软件，点击图中按钮，添加代理信息</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks3.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks3.png" alt=""></a></p><p>然后按照下图进行设置</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks4.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks4.png" alt=""></a></p><p>添加后点击”<strong>check</strong>“检测代理通断情况。</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks5.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks5.png" alt=""></a></p><p>当然，还可以在代理添加界面点击”Proxy Chains”按钮添加多条代理线路，以实现均衡负载。</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks6.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks6.png" alt=""></a></p><h2 id="②-添加代理规则"><a href="#②-添加代理规则" class="headerlink" title="②.添加代理规则"></a><strong>②.添加代理规则</strong></h2><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks7.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks7.png" alt=""></a></p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks8.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks8.png" alt=""></a></p><p>这里可以设置某一款程序需要通过代理访问，当然不支持代理访问的软件也可以使用。当然，一般我们都用在网页，所以直接在域名那里设置需要通过代理的域名就可以了。 当然，最开始默认是有2条策略，就是Default和Localhost，Default是不能被删除的，如果要使笔记本全局使用代理上网，只需要将Default修改为想要通过的代理即可，默认为”Direct”，即不通过代理访问。 在面板里能看到具体的软件使用的是什么规则访问网络。</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks9.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks9.png" alt=""></a></p><p>当然，界面还可以看实时流量图和统计信息。</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks10.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks10.png" alt=""></a></p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks11.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks11.png" alt=""></a></p><h3 id="③-注意事项"><a href="#③-注意事项" class="headerlink" title="③.注意事项"></a><strong>③.注意事项</strong></h3><p>为了防止DNS污染，一般使用代理的时候都会使用远程服务器的DNS设置，在第一次启动软件时会有提示，我们也可以在这里设置。</p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks12.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks12.png" alt=""></a></p><p><a href="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks13.png" target="_blank" rel="noopener"><img data-src="http://awy.me/wp-content/uploads/2014/06/062514_0907_Shadowsocks13.png" alt=""></a></p><p>另外通过实验，此方法不能打开twitter.com，其他网站均正常访问，原因未知。 到此，我们就可以自由访问网络了。<br>(软件的使用部分摘抄自: <a href="http://awy.me/2014/06/yong-shadowsocks-he-proxifier-zi-you-fang-wen-hu-lian-wang/" target="_blank" rel="noopener">http://awy.me/2014/06/yong-shadowsocks-he-proxifier-zi-you-fang-wen-hu-lian-wang/</a> )</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;google photo backup there was a problem to authorization，google drive unable to connect mac 等错误信息， 分析了下原因是这里两个 app 的连接不支持上层的 http、sock 代理，如果使用需要在 tcp 层面进行代理，这时候 Proxifier 就出现了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Proxifier allows network applications that do not support working through proxy servers to operate through a SOCKS or HTTPS proxy and chains.&lt;br&gt;The most advanced proxy client 。&lt;a href=&quot;https://www.proxifier.com/index.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.proxifier.com/index.htm&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Proxifier是一款功能非常强大的socks5客户端，可以让不支持通过代理服务器工作的网络程序能通过HTTPS或SOCKS代理或代理链。支持 64位系统，支持Xp，Vista，Win7，MAC OS ,支持socks4，socks5，http代理协议，支持TCP，UDP协议，可以指定端口，指定IP，指定域名,指定程序等运行模式，兼容性非常好，和SOCKSCAP属于同类软件，不过SOCKSCAP已经很久没更新了，不支持64位系统。 有许多网络应用程序不支持通过代理服务器工作，Proxifier 解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。此外，它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://www.ixirong.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="代理" scheme="http://www.ixirong.com/tags/%E4%BB%A3%E7%90%86/"/>
    
      <category term="工具" scheme="http://www.ixirong.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="翻墙" scheme="http://www.ixirong.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="google" scheme="http://www.ixirong.com/tags/google/"/>
    
  </entry>
  
  <entry>
    <title>你所必知的 iterm2 技巧</title>
    <link href="http://www.ixirong.com/2016/11/05/what-you-must-know-about-iterm2/"/>
    <id>http://www.ixirong.com/2016/11/05/what-you-must-know-about-iterm2/</id>
    <published>2016-11-05T13:16:09.000Z</published>
    <updated>2020-03-10T08:21:01.952Z</updated>
    
    <content type="html"><![CDATA[<p>Mac 上最适合开发使用的终极终端 iTerm2，比自带的 term 终端有很多特性，比如竖屏操作、历史剪贴板、选中即复制、搜索高亮自动复制搜索内容、像 secureRT 样子的复制会话，记住密码登录，tux 集成等等。<br>至于 Shell，一定要选则 zsh ，Mac 下已经自带，安装 <code>oh my zsh</code> 不用复杂的配置即可使用<br>一些常用的提升效率的快捷键整理如下:</p><h1 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h1><p>官方的介绍特点:</p><ul><li>⌘ + 数字在各 tab 标签直接来回切换</li><li>选择即复制 + 鼠标中键粘贴，这个很实用</li><li>⌘ + f 所查找的内容会被自动复制</li><li>⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏</li><li>⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏</li><li>ctrl + u 清空当前行，无论光标在什么位置</li><li>输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令</li><li>⌘ + shift + h 会列出剪切板历史</li><li>可以在 Preferences &gt; keys 设置全局快捷键调出 iterm，这个也可以用过 Alfred 实现</li></ul><a id="more"></a><p>一些常用的快捷键如下:</p><ul><li>新建标签：command + t</li><li>关闭标签：command + w</li><li>切换标签：command + 数字    command + 左右方向键</li><li>切换全屏：command + enter</li><li>查找：command + f</li><li>垂直分屏：command + d</li><li>水平分屏：command + shift + d</li><li>切换屏幕：command + option + 方向键      command + [ 或 command + ]</li><li>查看历史命令：command + </li><li>查看剪贴板历史：command + shift + h</li><li>清除当前行：ctrl + u</li><li>到行首：ctrl + a</li><li>到行尾：ctrl + e</li><li>前进后退：ctrl + f/b (相当于左右方向键)</li><li>上一条命令：ctrl + p</li><li>搜索命令历史：ctrl + r</li><li>删除当前光标的字符：ctrl + d</li><li>删除光标之前的字符：ctrl + h</li><li>删除光标之前的单词：ctrl + w</li><li>删除到文本末尾：ctrl + k</li><li>交换光标处文本：ctrl + t</li><li>清屏1：command + r</li><li>清屏2：ctrl + l</li></ul><h1 id="推荐插件"><a href="#推荐插件" class="headerlink" title="推荐插件"></a>推荐插件</h1><p>一些插件能显著提高效率，自己使用的一些在下面，方法很简单，在<code>~/.zshrc</code>文件的plugin 下面添加上你想要的插件名称就ok，oh-my-sh 自带了很多插件，可以通过 <code>ls ~/.oh-my-zsh/plugins</code> 来查看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git-extras git mvn svn osx brew brew-cask npm  colored-man colorize copydir <span class="built_in">history</span> sublime <span class="built_in">command</span>-not-found zsh-syntax-highlighting Z)</span><br></pre></td></tr></table></figure><ul><li>git：当你处于一个 git 受控的目录下时，Shell 会明确显示 「git」和 branch，如上图所示，另外对 git 很多命令进行了简化，例如 gco=’git checkout’、gd=’git diff’、gst=’git status’、g=’git’等等，熟练使用可以大大减少 git 的命令长度，命令内容可以参考~/.oh-my-zsh/plugins/git/git.plugin.zsh</li><li>textmate：mr可以创建 ruby 的框架项目，tm finename 可以用 textmate 打开指定文件。</li><li>osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。</li><li>git-extras: <a href="https://github.com/tj/git-extras" target="_blank" rel="noopener"> Git extras</a> 工具与 zsh 的继承，很方便，在 git 仓库目录下试试<code>git summary</code>即可看到整个仓库的汇总信息。</li><li>sublime : 此插件能够在终端下使用命令<code>stt</code> 在 SublimeText 中打开当前文件夹，使用 <code>subl</code> 或者 <code>st</code> 来编辑某个特定文件，比如 <code>st 1.txt</code>，当然前提你得安装了 SublimeText。</li><li>zsh-syntax-highlighting: 让你终端的每一条命令智能显示颜色，就像在 IDE 里面写代码一样，强烈推荐，安装及介绍参考 <a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">GitHub</a></li><li>z : Z is awesome ，让你在不同的目录中快速跳转，比如我想访问 <code>~/work/code/project/testApp</code> ，只要是之前访问过，直接输入<code>z testApp</code> 按 tab 键直接显示完整目录，按 enter 键直接进入当前目录，即使只输入了<code>z testa</code> 也能完成同样的工作，大大提升效率，此插件是自带的可以直接使用。</li><li>ag: 终端里面快速搜索当前目录下所有文件中所匹配的关键字的命令，类似与 awk，但是速度极快，速度极快，速度极快，使用<code>brew install</code> ，其实就是组件 <code>the_silver_searcher</code> ，详细参考地址 <a href="https://github.com/ggreer/the_silver_searcher" target="_blank" rel="noopener">GitHub</a> 。</li><li>tree : mac 下的 tree 命令，方便排查问题，直接 <code>brew install tree</code>即可。</li></ul><p>一些参考文章:<br><a href="http://www.ixirong.com/2015/06/08/how-to-use-mac-efficiently/">http://www.ixirong.com/2015/06/08/how-to-use-mac-efficiently/</a><br><a href="http://www.ixirong.com/2015/04/27/strong-bash-use-oh-my-zsh/">http://www.ixirong.com/2015/04/27/strong-bash-use-oh-my-zsh/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mac 上最适合开发使用的终极终端 iTerm2，比自带的 term 终端有很多特性，比如竖屏操作、历史剪贴板、选中即复制、搜索高亮自动复制搜索内容、像 secureRT 样子的复制会话，记住密码登录，tux 集成等等。&lt;br&gt;至于 Shell，一定要选则 zsh ，Mac 下已经自带，安装 &lt;code&gt;oh my zsh&lt;/code&gt; 不用复杂的配置即可使用&lt;br&gt;一些常用的提升效率的快捷键整理如下:&lt;/p&gt;
&lt;h1 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h1&gt;&lt;p&gt;官方的介绍特点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;⌘ + 数字在各 tab 标签直接来回切换&lt;/li&gt;
&lt;li&gt;选择即复制 + 鼠标中键粘贴，这个很实用&lt;/li&gt;
&lt;li&gt;⌘ + f 所查找的内容会被自动复制&lt;/li&gt;
&lt;li&gt;⌘ + d 横着分屏 / ⌘ + shift + d 竖着分屏&lt;/li&gt;
&lt;li&gt;⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏&lt;/li&gt;
&lt;li&gt;ctrl + u 清空当前行，无论光标在什么位置&lt;/li&gt;
&lt;li&gt;输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令&lt;/li&gt;
&lt;li&gt;⌘ + shift + h 会列出剪切板历史&lt;/li&gt;
&lt;li&gt;可以在 Preferences &amp;gt; keys 设置全局快捷键调出 iterm，这个也可以用过 Alfred 实现&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://www.ixirong.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="mac" scheme="http://www.ixirong.com/tags/mac/"/>
    
      <category term="终端" scheme="http://www.ixirong.com/tags/%E7%BB%88%E7%AB%AF/"/>
    
      <category term="iterm2" scheme="http://www.ixirong.com/tags/iterm2/"/>
    
      <category term="快捷键" scheme="http://www.ixirong.com/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
      <category term="技巧" scheme="http://www.ixirong.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>初识 Docker Compose</title>
    <link href="http://www.ixirong.com/2016/11/04/first-docker-compose/"/>
    <id>http://www.ixirong.com/2016/11/04/first-docker-compose/</id>
    <published>2016-11-04T14:57:15.000Z</published>
    <updated>2020-03-10T08:25:59.664Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application’s services. Then, using a single command, you create and start all the services from your configuration.</p></blockquote><p>Dockerfile 可以让用户管理一个单独的应用容器；而 Compose 则允许用户在一个模板（YAML 格式）中定义一组相关联的应用容器（被称为一个 project，即项目），例如一个 Web 服务容器再加上后端的数据库服务容器等，就拿官网的 Python 例子来说，功能很简单，利用 redis 的 incr 的功能对页面的访问量进行统计。</p><p>docker-compose 的安装可以参考官网，如果安装了 Docker for Mac 或者 Docker for windows 则直接就存在了。</p><p>创建项目目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir composetest</span><br><span class="line">$ cd composetest</span><br></pre></td></tr></table></figure><a id="more"></a><p>创建 Python 的程序 <code>app.py</code> ，功能就是利用 redis 的 incr 方法进行访问计数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from redis import Redis</span><br><span class="line"></span><br><span class="line">app &#x3D; Flask(__name__)</span><br><span class="line">redis &#x3D; Redis(host&#x3D;&#39;redis&#39;, port&#x3D;6379)</span><br><span class="line"></span><br><span class="line">@app.route(&#39;&#x2F;&#39;)</span><br><span class="line">def hello():</span><br><span class="line">    redis.incr(&#39;hits&#39;)</span><br><span class="line">    return &#39;Hello World! I have been seen %s times.&#39; % redis.get(&#39;hits&#39;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    app.run(host&#x3D;&quot;0.0.0.0&quot;, debug&#x3D;True)</span><br></pre></td></tr></table></figure><p>由于 Python 依赖的 <code>flask</code>、<code>redis</code> 组件都需要另外安装，比如使用 <code>pip</code>来安装，单独设置一文件 <code>requirements.txt</code>，内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flask</span><br><span class="line">redis</span><br></pre></td></tr></table></figure><p>创建 service 依赖的第一个 image，<code>app.py</code> 程序的运行环境，利用 <code>Dockerfile</code> 来制作，内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM python:2.7 #基于 python:2.7 镜像</span><br><span class="line">ADD . &#x2F;code  #将本地目录中的内容添加到 container 的 &#x2F;code 目录下</span><br><span class="line">WORKDIR &#x2F;code  #设置程序工作目录为 &#x2F;code</span><br><span class="line">RUN pip install -r requirements.txt   #运行安装命令</span><br><span class="line">CMD python app.py  #启动程序</span><br></pre></td></tr></table></figure><p><code>Dockerfile</code> 创建好就可以制作镜像了，运行<code>docker build -t compose/python_app .</code> ，成功后通过<code>docker images</code>查看即能看到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker images                                   </span><br><span class="line">REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">compose&#x2F;python_app     latest              1a92fed00abd        59 minutes ago      680.4 MB</span><br></pre></td></tr></table></figure><p>接下来制作 docker-compose 需要的配置文件 <code>docker-compose.yml</code>， version 要选择 2 ，1的版本很古老了，配置中可以看到创建了 2 个 service，<code>web</code> 和 <code>redis</code> ，各自有依赖的镜像，其中<code>web</code> 开放 container 的5000端口，并与 host 的5000端口应对，方便通过 <code>localhost:5000</code> 来访问， <code>volumes</code> 即将本地目录中的文件加载到容器的 <code>/code</code> 中，<code>depends_on</code> 表名 services <code>web</code> 是依赖另一个 service <code>redis</code>的，完整的配置如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;2&#39;</span><br><span class="line">  services:</span><br><span class="line">    web:</span><br><span class="line">      image: compose&#x2F;python_app</span><br><span class="line">      ports:</span><br><span class="line">       - &quot;5000:5000&quot;</span><br><span class="line">      volumes:</span><br><span class="line">       - .:&#x2F;code</span><br><span class="line">      depends_on:</span><br><span class="line">       - redis</span><br><span class="line">    redis:</span><br><span class="line">      image: redis</span><br></pre></td></tr></table></figure><p>前提都搞定了，就差最后一步启动了，命令 <code>docker-compose  up</code> ，成功后如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Attaching to composetestbypython_redis_1</span><br><span class="line">redis_1  | 1:C 04 Nov 10:35:17.448 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server &#x2F;path&#x2F;to&#x2F;redis.conf</span><br><span class="line">redis_1  |                 _._</span><br><span class="line">redis_1  |            _.-&#96;&#96;__ &#39;&#39;-._</span><br><span class="line">redis_1  |       _.-&#96;&#96;    &#96;.  &#96;_.  &#39;&#39;-._           Redis 3.2.5 (00000000&#x2F;0) 64 bit</span><br><span class="line">redis_1  |   .-&#96;&#96; .-&#96;&#96;&#96;.  &#96;&#96;&#96;\&#x2F;    _.,_ &#39;&#39;-._</span><br><span class="line">redis_1  |  (    &#39;      ,       .-&#96;  | &#96;,    )     Running in standalone mode</span><br><span class="line">redis_1  |  |&#96;-._&#96;-...-&#96; __...-.&#96;&#96;-._|&#39;&#96; _.-&#39;|     Port: 6379</span><br><span class="line">redis_1  |  |    &#96;-._   &#96;._    &#x2F;     _.-&#39;    |     PID: 1</span><br><span class="line">redis_1  |   &#96;-._    &#96;-._  &#96;-.&#x2F;  _.-&#39;    _.-&#39;</span><br><span class="line">redis_1  |  |&#96;-._&#96;-._    &#96;-.__.-&#39;    _.-&#39;_.-&#39;|</span><br><span class="line">redis_1  |  |    &#96;-._&#96;-._        _.-&#39;_.-&#39;    |           http:&#x2F;&#x2F;redis.io</span><br><span class="line">redis_1  |   &#96;-._    &#96;-._&#96;-.__.-&#39;_.-&#39;    _.-&#39;</span><br><span class="line">redis_1  |  |&#96;-._&#96;-._    &#96;-.__.-&#39;    _.-&#39;_.-&#39;|</span><br><span class="line">redis_1  |  |    &#96;-._&#96;-._        _.-&#39;_.-&#39;    |</span><br><span class="line">redis_1  |   &#96;-._    &#96;-._&#96;-.__.-&#39;_.-&#39;    _.-&#39;</span><br><span class="line">redis_1  |       &#96;-._    &#96;-.__.-&#39;    _.-&#39;</span><br><span class="line">redis_1  |           &#96;-._        _.-&#39;</span><br><span class="line">redis_1  |               &#96;-.__.-&#39;</span><br><span class="line">redis_1  |</span><br><span class="line">redis_1  | 1:M 04 Nov 10:35:17.450 # WARNING: The TCP backlog setting of 511 cannot be enforced because &#x2F;proc&#x2F;sys&#x2F;net&#x2F;core&#x2F;somaxconn is set to the lower value of 128.</span><br><span class="line">redis_1  | 1:M 04 Nov 10:35:17.450 # Server started, Redis version 3.2.5</span><br><span class="line">redis_1  | 1:M 04 Nov 10:35:17.451 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#39;vm.overcommit_memory &#x3D; 1&#39; to &#x2F;etc&#x2F;sysctl.conf and then reboot or run the command &#39;sysctl vm.overcommit_memory&#x3D;1&#39; for this to take effect.</span><br><span class="line">redis_1  | 1:M 04 Nov 10:35:17.451 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#39;echo never &gt; &#x2F;sys&#x2F;kernel&#x2F;mm&#x2F;transparent_hugepage&#x2F;enabled&#39; as root, and add it to your &#x2F;etc&#x2F;rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span><br><span class="line">redis_1  | 1:M 04 Nov 10:35:17.451 * The server is now ready to accept connections on port 6379</span><br></pre></td></tr></table></figure><p>此时通过compose 的 ps 命令也能看到 <code>docker-compose ps</code> :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker-compose ps                                                                       </span><br><span class="line">          Name                          Command               State           Ports</span><br><span class="line">---------------------------------------------------------------------------------------------</span><br><span class="line">composetestbypython_redis_1   docker-entrypoint.sh redis ...   Up      6379&#x2F;tcp</span><br><span class="line">composetestbypython_web_1     &#x2F;bin&#x2F;sh -c python app.py         Up      0.0.0.0:5000-&gt;5000&#x2F;tcp</span><br></pre></td></tr></table></figure><p>ok ，在浏览器中访问 <code>http://localhost:5000</code> 就能看到最终的样子啦。</p><p><code>docker-compose</code> 还有很多实用的命令，比如 logs、build、start、stop 等，可以通过 <code>docker-compose --help</code>来查看:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">Define and run multi-container applications with Docker.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  docker-compose [-f &lt;arg&gt;...] [options] [COMMAND] [ARGS...]</span><br><span class="line">  docker-compose -h|--help</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -f, --file FILE             Specify an alternate compose file (default: docker-compose.yml)</span><br><span class="line">  -p, --project-name NAME     Specify an alternate project name (default: directory name)</span><br><span class="line">  --verbose                   Show more output</span><br><span class="line">  -v, --version               Print version and exit</span><br><span class="line">  -H, --host HOST             Daemon socket to connect to</span><br><span class="line"></span><br><span class="line">  --tls                       Use TLS; implied by --tlsverify</span><br><span class="line">  --tlscacert CA_PATH         Trust certs signed only by this CA</span><br><span class="line">  --tlscert CLIENT_CERT_PATH  Path to TLS certificate file</span><br><span class="line">  --tlskey TLS_KEY_PATH       Path to TLS key file</span><br><span class="line">  --tlsverify                 Use TLS and verify the remote</span><br><span class="line">  --skip-hostname-check       Don&#39;t check the daemon&#39;s hostname against the name specified</span><br><span class="line">                              in the client certificate (for example if your docker host</span><br><span class="line">                              is an IP address)</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  build              Build or rebuild services</span><br><span class="line">  bundle             Generate a Docker bundle from the Compose file</span><br><span class="line">  config             Validate and view the compose file</span><br><span class="line">  create             Create services</span><br><span class="line">  down               Stop and remove containers, networks, images, and volumes</span><br><span class="line">  events             Receive real time events from containers</span><br><span class="line">  exec               Execute a command in a running container</span><br><span class="line">  help               Get help on a command</span><br><span class="line">  kill               Kill containers</span><br><span class="line">  logs               View output from containers</span><br><span class="line">  pause              Pause services</span><br><span class="line">  port               Print the public port for a port binding</span><br><span class="line">  ps                 List containers</span><br><span class="line">  pull               Pulls service images</span><br><span class="line">  push               Push service images</span><br><span class="line">  restart            Restart services</span><br><span class="line">  rm                 Remove stopped containers</span><br><span class="line">  run                Run a one-off command</span><br><span class="line">  scale              Set number of containers for a service</span><br><span class="line">  start              Start services</span><br><span class="line">  stop               Stop services</span><br><span class="line">  unpause            Unpause services</span><br><span class="line">  up                 Create and start containers</span><br><span class="line">  version            Show the Docker-Compose version information</span><br></pre></td></tr></table></figure><p>更多 <code>docker-compose</code> 例子参考官网 doc 文档 : </p><ul><li>Docker-compose with Django : <a href="https://docs.docker.com/compose/django/" target="_blank" rel="noopener">https://docs.docker.com/compose/django/</a></li><li>Get started with Rails : <a href="https://docs.docker.com/compose/rails/" target="_blank" rel="noopener">https://docs.docker.com/compose/rails/</a></li><li>Get started with WordPress :  <a href="https://docs.docker.com/compose/wordpress/" target="_blank" rel="noopener">https://docs.docker.com/compose/wordpress/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application’s services. Then, using a single command, you create and start all the services from your configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dockerfile 可以让用户管理一个单独的应用容器；而 Compose 则允许用户在一个模板（YAML 格式）中定义一组相关联的应用容器（被称为一个 project，即项目），例如一个 Web 服务容器再加上后端的数据库服务容器等，就拿官网的 Python 例子来说，功能很简单，利用 redis 的 incr 的功能对页面的访问量进行统计。&lt;/p&gt;
&lt;p&gt;docker-compose 的安装可以参考官网，如果安装了 Docker for Mac 或者 Docker for windows 则直接就存在了。&lt;/p&gt;
&lt;p&gt;创建项目目录:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mkdir composetest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd composetest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="http://www.ixirong.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://www.ixirong.com/tags/Docker/"/>
    
      <category term="容器" scheme="http://www.ixirong.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="虚拟化" scheme="http://www.ixirong.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>知识管理</title>
    <link href="http://www.ixirong.com/2016/11/04/how-to-manage-personal-time/"/>
    <id>http://www.ixirong.com/2016/11/04/how-to-manage-personal-time/</id>
    <published>2016-11-03T16:21:53.000Z</published>
    <updated>2016-11-03T16:30:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>转自 weekly 维护作者:<a href="https://github.com/zenany/zenany.github.io/blob/master/_posts/about_time_and_knowledge_management.md" target="_blank" rel="noopener">About Time and Knowledge Management</a></p><p>关于时间管理和知识管理这两个话题，我见过最好的一个总结是：</p><blockquote><p>此生理想、近期计划、今日功课</p></blockquote><p>这是马英九的父亲马鹤凌为马英九制定的人生规划解决之道，是从我的师傅 <a href="https://github.com/nwind" target="_blank" rel="noopener">nwind</a> 的一场培训 <a href="https://speakerdeck.com/baidufe/gong-cheng-shi-de-ge-ren-fa-zhan-gui-hua" target="_blank" rel="noopener">工程师的个人发展规划</a> 中学到的。总结的很完美，但实践起来坑很多。分享一些我的实践经验，以及 <a href="https://github.com/zenany/weekly" target="_blank" rel="noopener">Weekly</a> 是怎么整理的。</p><h4 id="此生理想"><a href="#此生理想" class="headerlink" title="此生理想"></a>此生理想</h4><p>很多关于时间管理和知识管理的书最后都会指向这点：<strong>你的理想是什么，你想成为什么样的人，你想要的生活是什么样的</strong>。因为只有搞清楚这点，时间和知识管理才是最高效的。拥有理想看起来很美好，然而现实是：<strong>大多数人当下并没有真正想清楚自己的理想是什么</strong>，有可能是在年龄很大时才找到属于自己理想。有时候，我们貌似有了一个理想或梦想，但行动往往会出卖我们，暴露出真相并非如此。</p><a id="more"></a><p>所以，我的实践变成了：<strong>不刻意去追寻理想，活在当下</strong>。做好这几件事：</p><ul><li>专注于：解决问题+知识积累，这两件事可以保证知识和技能始总是提升的。不管最终理想是什么，知识和技能最后都会发挥作用。在解决问题的过程中，也会展现个人价值。</li><li>不要给自己设限，认定自己不能做什么，勇于尝试各种可能，逐步排除掉什么不是自己想要的。</li></ul><h4 id="近期计划"><a href="#近期计划" class="headerlink" title="近期计划"></a>近期计划</h4><p>请注意：是“近期”而非“远期”，是“计划”而非“规划”。这一点，在理想的驱使下，很容易错误地被实践成长远规划。按我的经验：1 年内的计划比较容易可控，超过 1 年的变数太多，只能当做远景来确定方向。</p><p>我的实践是：<strong>踏歌而行，踩着节拍往前走</strong>。保持节奏可以让我们的工作和学习有序前行，避免迷失方向。我通常这样做：    </p><ul><li>按 <code>年 -&gt; 月 -&gt; 周</code> 这样的自然节奏进行，在上一个时间周期结束时确定下一个周期的事，比如：春节期间想好下一年的，每月初想好下月的事情，每周写周报或周末空闲时时想好下周要做的事，周末闲暇时间 &amp; 每天在路上想好每件事大致怎么做。所以在工作时，我往往只需执行。</li><li>不迷恋于各种日程及时间管理工具，用心记，当一周事情特别多时，用纸+笔</li></ul><h4 id="今日功课"><a href="#今日功课" class="headerlink" title="今日功课"></a>今日功课</h4><p>关于这点，我想分享一个我总结出的词汇“可持续性编程”。为什么编程还需要可持续性，因为：一个人的工作生涯会在20 年以上，这是一场长跑。而且，从职业生涯的角度去看问题，会发现一些有意思的东西：</p><ul><li>很多当下的问题根本只是浪花一朵，比如：晋升、绩效、涨薪…</li><li>很多看似不可能的东西变得可能，比如：掌握 N 种编程语言、研究清楚浏览器内核、学会一种乐器…</li></ul><p>从编程生涯的角度来看，今日功课其实是每日功课，要跑好这场长跑，我觉得这几点很重要：</p><ul><li><p>给自己一个<strong>安静的环境</strong>，同时省出学习时间</p><ul><li>关掉聊天工具、消息提醒，QQ 我已经变成每 1 周甚至 1月去开一次了，在攻坚时我会不开邮件客户端、旺旺、钉钉</li><li>少刷微博、微信、新闻，甚至不看，需要时定期去扫即可，不用担心会漏掉什么，重要的东西总会通过各种渠道传递到你这里的</li><li>减少不必要的会议，每个技术交流都是一份非常好的学习机会，可以选择不去，但去了后就全心参与，不看手机、不开电脑，专心获取或输出有效信息</li></ul></li><li><p><strong>健康的体魄</strong>，没有好身体，怎么写 20 年代码 </p><ul><li>工作必须有底线，也不能让自己长期处于高压工作下。我的习惯是：周末尽量不做实体性工作（除非计划有变）；平时不能牺牲吃饭+睡觉时间去赶进度。</li><li>适度运动，找到属于自己的一种方式。我会坚持每周去爬山一次，呼吸新鲜空气+思考问题</li></ul></li><li><p><strong>持续学习的精神</strong>，这点 <a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="noopener">阮一峰老师</a> 是我们的榜样。要保持持续学习，我觉得这两点非常重要：</p><ul><li>兼容并蓄：不要给技术贴标签，以学习的心态去看待每个技术，了解它们思考和解决问题的方式、实现原理、应用场景，不断丰富自己对编程的认知和解决问题的思路。</li><li>格物致知：计算机科学是非常庞大的一门科学，足以支撑我们研究一辈子。前端所接触的，只是技术的冰山一角，还有很多东西需要我们去探索。格物致知能让我们掌握日常使用的技术背后的原理，从而提升掌控复杂的能力。</li></ul></li></ul><h4 id="Weekly-是如何整理的"><a href="#Weekly-是如何整理的" class="headerlink" title="Weekly 是如何整理的"></a>Weekly 是如何整理的</h4><p>很多人会问我这个问题，其实，做这件事的初心很简单：记录自己平时看到的优质资料以备用，完善个人知识库。但由于常常有会把一些特别好的东西分享到群里，就有人建议我可以定期整理这类东西，发给大家。于是 Weekly 就开始了，坚持了好多年。</p><p>做这件事，我使用的<strong>工具</strong>是：</p><ul><li>RSS ：Feedly + gReader，离线、在线都能看，上网约等于看 rss</li><li>资源汇集地：<a href="http://www.daemonology.net/hn-daily/" target="_blank" rel="noopener">hn-daily</a>、<a href="http://javascriptweekly.com/" target="_blank" rel="noopener">JavaScript Weekly</a> 等各种 weekly、技术组织官网、<a href="https://medium.com/" target="_blank" rel="noopener">Medium</a>、<a href="https://javascriptkicks.com/" target="_blank" rel="noopener">JavaScriptKicks</a>  </li><li>OneNote：记录感兴趣的文章和资源，比 evernote 快，稳定性、复制 html 的效率和效果、搜索等都更好用</li><li>微博：订阅一些喜欢分享资源的人或者组织，其实微博仍然是非常好的一个传播渠道</li><li>微信：订阅公众号</li></ul><p><strong>方式：</strong>  </p><ul><li>定期看，而非实时关注，一般我会在周三晚上、周六集中扫一遍，筛选出有价值的和感兴趣的，周日汇总并完成整理</li><li>零散时间会看 rss 筛选信息，在周末或者晚上空闲时看自己感兴趣的文章</li></ul><p><strong>信源：</strong>  </p><ul><li>雪球效应：以资源汇集点为起点，逐步收集优质资源来自的 bolg 、技术站点</li><li>整理自己感兴趣的知识，逐步形成个人知识库</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>时间管理和知识管理可以围绕这 12 字去探索自己的模式：此生理想、近期计划、今日功课。<br>我的习惯和建议是：</p><ul><li>活在当下：专注于解决问题+知识积累；不给自己设限，去尝试未来的各种可能；</li><li>踏歌而行，踩着节拍往前走：以 <code>年 -&gt; 月 -&gt; 周</code> 的维度制定计划；用心而非工具管理计划；</li><li>可持续编程：安静的环境；健康的体魄；持续学习的精神；</li><li>知识管理：从信息汇聚源除非逐步形成自己的知识库；利用零散时间+定期扫的模式收集资源，在业余时间集中阅读</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转自 weekly 维护作者:&lt;a href=&quot;https://github.com/zenany/zenany.github.io/blob/master/_posts/about_time_and_knowledge_management.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;About Time and Knowledge Management&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于时间管理和知识管理这两个话题，我见过最好的一个总结是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此生理想、近期计划、今日功课&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是马英九的父亲马鹤凌为马英九制定的人生规划解决之道，是从我的师傅 &lt;a href=&quot;https://github.com/nwind&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nwind&lt;/a&gt; 的一场培训 &lt;a href=&quot;https://speakerdeck.com/baidufe/gong-cheng-shi-de-ge-ren-fa-zhan-gui-hua&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;工程师的个人发展规划&lt;/a&gt; 中学到的。总结的很完美，但实践起来坑很多。分享一些我的实践经验，以及 &lt;a href=&quot;https://github.com/zenany/weekly&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Weekly&lt;/a&gt; 是怎么整理的。&lt;/p&gt;
&lt;h4 id=&quot;此生理想&quot;&gt;&lt;a href=&quot;#此生理想&quot; class=&quot;headerlink&quot; title=&quot;此生理想&quot;&gt;&lt;/a&gt;此生理想&lt;/h4&gt;&lt;p&gt;很多关于时间管理和知识管理的书最后都会指向这点：&lt;strong&gt;你的理想是什么，你想成为什么样的人，你想要的生活是什么样的&lt;/strong&gt;。因为只有搞清楚这点，时间和知识管理才是最高效的。拥有理想看起来很美好，然而现实是：&lt;strong&gt;大多数人当下并没有真正想清楚自己的理想是什么&lt;/strong&gt;，有可能是在年龄很大时才找到属于自己理想。有时候，我们貌似有了一个理想或梦想，但行动往往会出卖我们，暴露出真相并非如此。&lt;/p&gt;
    
    </summary>
    
    
      <category term="职业规划" scheme="http://www.ixirong.com/categories/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/"/>
    
    
      <category term="时间管理" scheme="http://www.ixirong.com/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
      <category term="职业规划" scheme="http://www.ixirong.com/tags/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/"/>
    
      <category term="个人发展" scheme="http://www.ixirong.com/tags/%E4%B8%AA%E4%BA%BA%E5%8F%91%E5%B1%95/"/>
    
      <category term="知识管理" scheme="http://www.ixirong.com/tags/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>编程系列经典图书</title>
    <link href="http://www.ixirong.com/2016/11/03/programing-100-books/"/>
    <id>http://www.ixirong.com/2016/11/03/programing-100-books/</id>
    <published>2016-11-03T15:56:33.000Z</published>
    <updated>2020-03-10T08:22:10.620Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有时间多读读书，看看经典的图书有助于思想的提升。</p></blockquote><p>100+ 经典技术书籍，涵盖：计算机系统与网络、系统架构、算法与数据结构、前端开发、后端开发、移动开发、数据库、测试、项目与团队、程序员职业修炼、求职面试和编程相关的经典书籍。作者维护在 GitHub 上地址: <a href="https://github.com/jobbole/awesome-programming-books" target="_blank" rel="noopener">https://github.com/jobbole/awesome-programming-books</a></p><h2 id="计算机系统与网络"><a href="#计算机系统与网络" class="headerlink" title="计算机系统与网络"></a>计算机系统与网络</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00AAQXKXS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00AAQXKXS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">图灵的秘密:他的生平、思想及论文解读</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0011F9OQE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011F9OQE&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">计算机系统概论</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0011F5RYM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011F5RYM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入理解Linux内核</a>》</li></ul><a id="more"></a><ul><li>《<a href="https://www.amazon.cn/gp/product/B003QN7J7U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B003QN7J7U&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入Linux内核架构</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00116OTVS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00116OTVS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">TCP/IP详解 卷1：协议</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00JUM2ML4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00JUM2ML4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Linux系统编程（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B004X3Z3D4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004X3Z3D4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Linux内核设计与实现（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B004BJ18KM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004BJ18KM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入理解计算机系统（原书第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0011AP7RY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011AP7RY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">计算机程序的构造和解释（原书第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B009RSXIB4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B009RSXIB4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编码：隐匿在计算机软硬件背后的语言</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0140I5WPK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0140I5WPK&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">性能之颠：洞悉系统、企业与云计算</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B011S72JB6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B011S72JB6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">UNIX网络编程 卷1：套接字联网API（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B012R5A29O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B012R5A29O&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">UNIX网络编程 卷2：进程间通信</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B001GS7918/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001GS7918&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Windows核心编程(第5版)</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00PB5QQ84/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00PB5QQ84&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">WireShark网络分析就这么简单</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01AS1OS8A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01AS1OS8A&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">WireShark网络分析的艺术</a>》</li></ul><h2 id="编程通用"><a href="#编程通用" class="headerlink" title="编程通用"></a>编程通用</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B006P7V73G/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B006P7V73G&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程原本</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0061XKRXA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">代码大全</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B008Z1IEQ8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008Z1IEQ8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">UNIX编程艺术</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0031M9GHC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0031M9GHC&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">代码整洁之道</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00SFZH0DC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00SFZH0DC&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程珠玑（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0150BMQDM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0150BMQDM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程珠玑（续）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00IOAM6VE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00IOAM6VE&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">软件调试的艺术</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00KMJ2Q1U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KMJ2Q1U&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">修改代码的艺术</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B007HYMPBY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007HYMPBY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程语言实现模式</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B008B4DTG4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008B4DTG4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编写可读代码的艺术</a>》</li><li>《解析极限编程：拥抱变化》</li><li>《<a href="https://www.amazon.cn/gp/product/B008UCHA58/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008UCHA58&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">精通正则表达式（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B001NGO85I/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001NGO85I&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编译原理（第2版）</a>》龙书</li><li>《<a href="https://www.amazon.cn/gp/product/B011LPUB42/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B011LPUB42&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">重构：改善既有代码的设计</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ALPRM3M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ALPRM3M&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">七周七语言：理解多种编程范型</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00CBBLUFK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00CBBLUFK&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">调试九法：软硬件错误的排查之道</a>》</li><li>《程序设计语言：实践之路（第3版）》</li><li>《<a href="https://www.amazon.cn/gp/product/B00PG0MM3C/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00PG0MM3C&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">计算的本质：深入剖析程序和计算机</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B001130JN8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001130JN8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">设计模式 : 可复用面向对象软件的基础</a>》</li></ul><h2 id="算法与数据结构"><a href="#算法与数据结构" class="headerlink" title="算法与数据结构"></a>算法与数据结构</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B009OCFQ0O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B009OCFQ0O&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">算法（第4版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00AK7BYJY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00AK7BYJY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">算法导论（原书第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B019NB0VCI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B019NB0VCI&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python算法教程</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00S4HCQUI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00S4HCQUI&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">算法设计与分析基础（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B016DWSF8M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B016DWSF8M&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">学习 JavaScript 数据结构与算法</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01LDG2DSG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01LDG2DSG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数据结构与算法分析 : C++描述（第4版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B002WC7NGS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002WC7NGS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数据结构与算法分析 : C语言描述（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01CNP0CG6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01CNP0CG6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数据结构与算法分析 : Java语言描述（第2版）</a>》</li></ul><h2 id="职业修炼与规划"><a href="#职业修炼与规划" class="headerlink" title="职业修炼与规划"></a>职业修炼与规划</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00KQDTZ4S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KQDTZ4S&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">大教堂与集市</a>》</li><li>《卓有成效的程序员》</li><li>《<a href="https://www.amazon.cn/gp/product/B01LZJ8L9J/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01LZJ8L9J&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">程序员的职业素养</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B004GV08CY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004GV08CY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">程序员修炼之道：从小工到专家</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00H6X6LD4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00H6X6LD4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">软件开发者路线图：从学徒到高手</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00CBBKDGM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00CBBKDGM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">我编程，我快乐: 程序员职业规划之道</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B007VARUIM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007VARUIM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">程序员的思维修炼：开发认知潜能的九堂课</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00OA9L3NU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00OA9L3NU&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">高效程序员的45个习惯：敏捷开发修炼之道(修订版)</a>》</li></ul><h2 id="大师访谈"><a href="#大师访谈" class="headerlink" title="大师访谈"></a>大师访谈</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00451BP72/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00451BP72&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程大师智慧</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ALPRKMA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ALPRKMA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程大师访谈录</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00QA7GA2Y/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00QA7GA2Y&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程人生 : 15位软件先驱访谈录</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B007ED88CI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007ED88CI&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">奇思妙想 : 15位计算机天才及其重大发现</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B008G80O9K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008G80O9K&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">图灵和ACM图灵奖</a>》</li></ul><h2 id="架构-性能"><a href="#架构-性能" class="headerlink" title="架构/性能"></a>架构/性能</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B01ER75V6O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01ER75V6O&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">微服务设计</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00NGW4EAG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00NGW4EAG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">大数据日知录</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B003LBSRDM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B003LBSRDM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">企业应用架构模式</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00JMKWHFU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00JMKWHFU&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Web性能权威指南</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01M0EHQ43/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01M0EHQ43&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">SRE：Google运维解密</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0153178XM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0153178XM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">发布！软件的设计与部署</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01HZFHQQI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01HZFHQQI&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">高扩展性网站的 50 条原则</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00F3Z26G8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00F3Z26G8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">大型网站技术架构:核心原理与案例分析</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00EP6TGAU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00EP6TGAU&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">恰如其分的软件架构：风险驱动的设计方法</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00CMMUXC4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00CMMUXC4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">软件系统架构：使用视点和视角与利益相关者合作（第2版）</a>》</li></ul><h2 id="Web前端"><a href="#Web前端" class="headerlink" title="Web前端"></a>Web前端</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B013SGB2AO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B013SGB2AO&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">高性能 JavaScript</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0089TDFNS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0089TDFNS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">锋利的 jQuery（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B016DWSEWO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B016DWSEWO&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">JavaScript 忍者秘籍</a>》（感谢<a href="https://github.com/jobbole/awesome-programming-books/issues?q=is%3Aissue+is%3Aopen+author%3Ajoker-danta" target="_blank" rel="noopener">@joker-danta</a> 补充推荐）</li><li>《<a href="https://www.amazon.cn/gp/product/B00BQ7RMW0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00BQ7RMW0&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编写可维护的 JavaScript</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00W34DZ8K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00W34DZ8K&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">你不知道的 JavaScript（上）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B007VISQ1Y/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007VISQ1Y&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">JavaScript 权威指南（第6版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0097CON2S&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">JavaScript 语言精粹（修订版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B004VJM5KE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004VJM5KE&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">JavaScript DOM编程艺术 （第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B007OQQVMY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007OQQVMY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">JavaScript 高级程序设计（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00JVLEYY2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00JVLEYY2&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">JavaScript 异步编程：设计快速响应的网络应用</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00GMXI1QY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00GMXI1QY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Effective JavaScript：编写高质量JavaScript代码的68个有效方法</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00H706BIG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00H706BIG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">HTML5 权威指南</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B015316VJY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B015316VJY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">HTML5 秘籍（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00K58535O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00K58535O&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">HTML5 与 CSS3 基础教程（第八版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01ET3FO86/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01ET3FO86&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">CSS 揭秘</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00M2DKZ1W/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00M2DKZ1W&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">CSS 设计指南（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0011F5SIC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011F5SIC&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">CSS 权威指南（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01LXL42O5/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01LXL42O5&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入浅出 HTML 与 CSS</a>》</li></ul><h2 id="Java开发"><a href="#Java开发" class="headerlink" title="Java开发"></a>Java开发</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B01ER75QC8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01ER75QC8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java8 实战</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0077K9XHW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0077K9XHW&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java并发编程实战</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01DLB7Z66/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01DLB7Z66&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java性能权威指南</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00E0D2OX4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00E0D2OX4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java程序员修炼之道</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B017MEN094/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B017MEN094&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">实战Java高并发程序设计</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0011F7WU4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011F7WU4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java编程思想 （第4版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01HI0BUF8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01HI0BUF8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入理解Java虚拟机（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B001PTGR52/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001PTGR52&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Effective java 中文版（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01M22BGUQ/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01M22BGUQ&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java核心技术·卷1：基础知识（原书第9版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00IK7SM6O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00IK7SM6O&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Java核心技术·卷2：高级特性（原书第9版）</a>》</li></ul><h2 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00DVDDP0K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00DVDDP0K&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">精通C#（第6版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00J94AG2A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00J94AG2A&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入理解C#（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00P8VZ8T4/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00P8VZ8T4&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">CLR via C#（第4版）</a>》</li></ul><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00UI93JD8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00UI93JD8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">集体智慧编程</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00P6OJ0TC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00P6OJ0TC&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">笨办法学Python</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00KAFX65Q/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KAFX65Q&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python基础教程</a>》</li><li>《Python源码剖析》</li><li>《<a href="https://www.amazon.cn/gp/product/B007NB2B4M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007NB2B4M&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Head First Python</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00HECW20S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00HECW20S&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">与孩子一起学编程</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B004TUJ7A6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004TUJ7A6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python学习手册（第4版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00WKR1OKG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00WKR1OKG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python Cookbook（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01MCUN37Y/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01MCUN37Y&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python参考手册（第4版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01FQAS0KK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01FQAS0KK&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python核心编程（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01HCVUJFA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01HCVUJFA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python科学计算（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00GHGZLWS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00GHGZLWS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">利用 Python 进行数据分析</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01ION3W54/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01ION3W54&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Think Python：像计算机科学家一样思考Python（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00MHDPIJ6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00MHDPIJ6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python编程实战:运用设计模式、并发和程序库创建高质量程序</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B019ZRGBVU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B019ZRGBVU&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Python绝技：运用Python成为顶级黑客</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0153177A6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0153177A6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Flask Web开发:基于Python的Web应用开发实战</a>》</li></ul><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B01FSXCBOQ/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01FSXCBOQ&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Android编程权威指南（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00SFZGX08/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00SFZGX08&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">移动应用UI设计模式（第2版）</a>》</li></ul><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00NKZCM3U/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00NKZCM3U&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">iOS编程实战</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B013UG2ULW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B013UG2ULW&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">iOS编程（第4版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00DE60G3S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00DE60G3S&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Objective-C高级编程</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00IDSGY06/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00IDSGY06&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Effective Objective-C 2.0：编写高质量iOS与OS X代码的52个有效方法</a>》</li></ul><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B004R1QIJU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004R1QIJU&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Head First PHP &amp; MySQL（中文版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B005D6IRRY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005D6IRRY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入PHP：面向对象、模式与实践（第3版）</a>》</li></ul><h2 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00IZW4DK8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00IZW4DK8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C标准库</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00163LU68/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00163LU68&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C和指针</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0012NIW9K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0012NIW9K&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C专家编程</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0012UMPBY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0012UMPBY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C陷阱与缺陷</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01D10NSCM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01D10NSCM&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C语言接口与实现</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0011425T8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011425T8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C程序设计语言（第2版）</a>》</li><li>《C语言参考手册（第5版）》</li></ul><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00YLZIRHI/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00YLZIRHI&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C++标准库</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B005CFUQR0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005CFUQR0&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C++编程思想</a>》</li><li><span style="font-weight: normal;">《</span>C++语言的设计与演化<span style="font-weight: normal;">》</span></li><li>《<a href="https://www.amazon.cn/gp/product/B003VPX6YS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B003VPX6YS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C++程序设计原理与实践</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ESUIL0O/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ESUIL0O&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C++ Primer （中文第5版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00S6U4C6E/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00S6U4C6E&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C++ Primer习题集(第5版)</a> 》</li><li>《<a href="https://www.amazon.cn/gp/product/B01I9BNASA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01I9BNASA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">C++程序设计语言(第1-3部分)(原书第4版)</a> 》</li><li>《<a href="https://www.amazon.cn/gp/product/B004G72P24/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004G72P24&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Effective C++:改善程序与设计的55个具体做法(第3版)(中文版) </a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B004IP8BD6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004IP8BD6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">More Effective C++:35个改善编程与设计的有效方法(中文版) </a>》<br>&nbsp;</li></ul><h2 id="机器学习和数据挖掘"><a href="#机器学习和数据挖掘" class="headerlink" title="机器学习和数据挖掘"></a>机器学习和数据挖掘</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00JUE9DXW/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00JUE9DXW&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数据之巅</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00NTM5GK0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00NTM5GK0&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">矩阵分析</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B002WC7NH2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002WC7NH2&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">机器学习</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B007TSFMTA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007TSFMTA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">统计学习方法</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B01AG3ZV9K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B01AG3ZV9K&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">机器学习导论</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B008AK5YJO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008AK5YJO&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">推荐系统实践</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00D747PTK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00D747PTK&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">机器学习实战</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00AY830HS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00AY830HS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Web数据挖掘</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B006PHIVNA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B006PHIVNA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入浅出统计学</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00116C3DY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00116C3DY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">模式分类（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00264GG56/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00264GG56&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">概率论与数理统计</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00PRH2BXA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00PRH2BXA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">统计学习基础(第2版)(英文)</a> 》</li><li>《<a href="https://www.amazon.cn/gp/product/B007NR0T4A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B007NR0T4A&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数据挖掘：概念与技术（第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00K5I91WK/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00K5I91WK&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数据挖掘：实用机器学习工具与技术（原书第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B011I34CGA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B011I34CGA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">大数据：互联网大规模数据挖掘与分布式处理（第2版）</a>》</li></ul><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00H6X6M1A/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00H6X6M1A&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">SQL应用重构</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/0596009763/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=0596009763&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">SQL Cookbook</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00C1W58DE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00C1W58DE&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">高性能MySQL （第3版）</a>》</li><li>《深入浅出SQL（中文版）》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ETOV48K/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ETOV48K&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">MySQL技术内幕 : InnoDB存储引擎（第2版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00KR87J8G/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00KR87J8G&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">深入浅出MySQL : 数据库开发、优化与管理维护</a>》</li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B003JBIV0S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B003JBIV0S&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">探索式软件测试</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00PVOND2W/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00PVOND2W&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">有效的单元测试</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00FH36R6G/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00FH36R6G&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">Google软件测试之道</a>》</li></ul><h2 id="项目与团队"><a href="#项目与团队" class="headerlink" title="项目与团队"></a>项目与团队</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00VR8ZO28/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00VR8ZO28&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">人月神话</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B001DBRWL0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001DBRWL0&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">快速软件开发</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00MO7R1SG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00MO7R1SG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">人件（原书第3版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00CBBKRQ8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00CBBKRQ8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">门后的秘密：卓越管理的故事</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00BLZMG8W/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00BLZMG8W&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">极客与团队：软件工程师的团队生存秘笈</a>》</li></ul><h2 id="求职面试"><a href="#求职面试" class="headerlink" title="求职面试"></a>求职面试</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B00G8VOQOG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00G8VOQOG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">程序员面试金典（第5版）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00W5269HO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00W5269HO&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">编程之美 : 微软技术面试心得</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ALPRM7S/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ALPRM7S&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">金领简历：敲开苹果、微软、谷歌的大门</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00L5LKMVU/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00L5LKMVU&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">剑指Offer：名企面试官精讲典型编程题（纪念版）</a>》</li></ul><h2 id="编程之外"><a href="#编程之外" class="headerlink" title="编程之外"></a>编程之外</h2><ul><li>《<a href="https://www.amazon.cn/gp/product/B005DSK4W8/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005DSK4W8&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">暗时间</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00P6OJ09C/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00P6OJ09C&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">数学之美</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ANY9KZE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ANY9KZE&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">赢得朋友</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B008MIFWJG/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008MIFWJG&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">精益创业</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00QPZARMA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00QPZARMA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">批判性思维</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00M2DKZNA/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00M2DKZNA&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">世界是数字的</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00A4H3JJS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00A4H3JJS&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">程序员的数学</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00N4LZ6RO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00N4LZ6RO&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">程序员健康指南</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B005O4PUFC/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005O4PUFC&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">禅与摩托车维修艺术</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B0081M8TZ2/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0081M8TZ2&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">关键对话：如何高效能沟通</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00EY8JUBO/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00EY8JUBO&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">写作法宝：非虚构写作指南</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00G1ZT2C0/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00G1ZT2C0&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">黑客与画家 : 来自计算机时代的高见</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00WDTQU8M/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00WDTQU8M&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">软件随想录（卷1）</a>》《<a href="https://www.amazon.cn/gp/product/B00WFT32FY/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00WFT32FY&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">软件随想录（卷2）</a>》</li><li>《<a href="https://www.amazon.cn/gp/product/B00ICWNKT6/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B00ICWNKT6&amp;linkCode=as2&amp;tag=vastwork-23" target="_blank" rel="noopener">如何把事情做到最好：改变全球9800万人的人生指导书</a>》</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有时间多读读书，看看经典的图书有助于思想的提升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;100+ 经典技术书籍，涵盖：计算机系统与网络、系统架构、算法与数据结构、前端开发、后端开发、移动开发、数据库、测试、项目与团队、程序员职业修炼、求职面试和编程相关的经典书籍。作者维护在 GitHub 上地址: &lt;a href=&quot;https://github.com/jobbole/awesome-programming-books&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/jobbole/awesome-programming-books&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;计算机系统与网络&quot;&gt;&lt;a href=&quot;#计算机系统与网络&quot; class=&quot;headerlink&quot; title=&quot;计算机系统与网络&quot;&gt;&lt;/a&gt;计算机系统与网络&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《&lt;a href=&quot;https://www.amazon.cn/gp/product/B00AAQXKXS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=536&amp;amp;creative=3200&amp;amp;creativeASIN=B00AAQXKXS&amp;amp;linkCode=as2&amp;amp;tag=vastwork-23&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图灵的秘密:他的生平、思想及论文解读&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href=&quot;https://www.amazon.cn/gp/product/B0011F9OQE/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=536&amp;amp;creative=3200&amp;amp;creativeASIN=B0011F9OQE&amp;amp;linkCode=as2&amp;amp;tag=vastwork-23&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;计算机系统概论&lt;/a&gt;》&lt;/li&gt;
&lt;li&gt;《&lt;a href=&quot;https://www.amazon.cn/gp/product/B0011F5RYM/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=536&amp;amp;creative=3200&amp;amp;creativeASIN=B0011F5RYM&amp;amp;linkCode=as2&amp;amp;tag=vastwork-23&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;深入理解Linux内核&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://www.ixirong.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://www.ixirong.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="编程" scheme="http://www.ixirong.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>第一本 Docker 书笔记</title>
    <link href="http://www.ixirong.com/2016/11/01/first-docker-book/"/>
    <id>http://www.ixirong.com/2016/11/01/first-docker-book/</id>
    <published>2016-11-01T05:28:56.000Z</published>
    <updated>2020-03-07T09:41:16.380Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 是一个开源的应用容器引擎，开发者可以利用 Docker 打包自己的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。本书主要讲解了一些 Docker 的基本概念以及一些应用，整理了一些日常使用命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line">docker ps (-a) </span><br><span class="line"><span class="comment">#列出最后运行的容器，包括运行中和已经停止的</span></span><br><span class="line">docker ps -l /docker ps -n 2</span><br><span class="line"><span class="comment">#指定容器名称 first_example ,查找本地，pull remote ，启动</span></span><br><span class="line">docker run -i -t --name=first_example ubuntu /bin/bash</span><br><span class="line">docker restart first_example</span><br><span class="line">docker stop first_example</span><br><span class="line"><span class="comment">#创建后台进程 -d 参数</span></span><br><span class="line">docker run --name daemon_example -d ubuntu /bin/sh -c <span class="string">"while true;do echo hello world;sleep 1;done"</span></span><br><span class="line"><span class="comment"># 查看进程日志</span></span><br><span class="line">docker logs daemon_example</span><br><span class="line">docker logs --tail 10 daemon_example</span><br><span class="line">docker logs --tail 0 -f -t daemon_example <span class="comment">#不断输出,-t 输出时间</span></span><br><span class="line"><span class="comment"># 查看内部进程</span></span><br><span class="line">docker top daemon_example</span><br><span class="line"><span class="comment"># 在容器额外启动新进程</span></span><br><span class="line"><span class="comment"># i 交互式</span></span><br><span class="line">docker <span class="built_in">exec</span> -t -i daemon_example /bin/bash</span><br><span class="line"><span class="comment"># d 后台式</span></span><br><span class="line">docker <span class="built_in">exec</span> -d daemon_example touch test_exec.txt</span><br><span class="line"><span class="comment"># 由于某种错误，进程停止，自动重启</span></span><br><span class="line">docker run --restart=always --name first_example -d ubuntu /bin/sh -c <span class="string">"while true;do echo hello_world;sleep  1;done"</span></span><br><span class="line"><span class="comment"># inspect 深入容器获取更多信息</span></span><br><span class="line">docker inspect first_example</span><br><span class="line"><span class="comment"># rm 删除容器</span></span><br><span class="line">docker rm first_example</span><br><span class="line"><span class="comment"># rmi 删除镜像之前先要使用 docker rm 命令删除掉依赖这个镜像的所有容器。因为docker的容器实际上是建立在镜像之上的可写层，所以会依赖下层的只读镜像层</span></span><br><span class="line">docker rmi ubuntu_my_example</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="二、Docker-镜像和仓库"><a href="#二、Docker-镜像和仓库" class="headerlink" title="二、Docker 镜像和仓库"></a>二、Docker 镜像和仓库</h1><p>创建镜像方法主要有两种：一种是根据运行的容器创建镜像（docker commit命令）第二种是编写DockerFile文件创建镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># commit 方式</span></span><br><span class="line">docker commit -m <span class="string">'python2.7 and yum repo'</span> -a <span class="string">'ixirong.liu@gmail.com'</span> 415fee0a0817 xirong/centos_xirong:v0.1</span><br><span class="line"><span class="comment"># 创建新的tag image，会产生新的image</span></span><br><span class="line">docker tag 5db5f8471261 ouruser/sinatra:devel</span><br></pre></td></tr></table></figure><p>Docker 可以采用编写 DockerFile 方式创建自定义的镜像。DockerFile 的基本结构有四部分：<br>FROM： 使用的基础镜像<br>MAINTAINER：创建镜像的用户、用户邮箱<br>RUN：是镜像的操作命令，每运行一行RUN执行，镜像就添加新的一层，并提交（但是中间结果不会保存）<br>CMD：指定运行容器时的操作命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This dockerfile uses the ubuntu image</span></span><br><span class="line">FROM ubuntu</span><br><span class="line">MAINTAINER docker_user docker_user@email.com</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"deb http://archive.ubuntu.com/ubuntu/ raring main universe"</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">RUN apt-get update &amp;&amp; apt-get install -y nginx</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">"\ndaemon off;"</span> &gt;&gt; /etc/nginx/nginx.conf</span><br><span class="line">CMD /usr/sbin/nginx</span><br></pre></td></tr></table></figure><p>dockerfile 创建完成后，需要 build 镜像： <code>docker build -t repository/name .</code>，之后通过 <code>docker images</code> 就能看到创建的镜像了。</p><p>全书电子版可在网络上下载，地址：<a href="http://download.csdn.net/detail/henyue/9529625" target="_blank" rel="noopener">http://download.csdn.net/detail/henyue/9529625</a> ,书上的章节源码下载: <a href="http://download.csdn.net/detail/ftx2540993425/9469275" target="_blank" rel="noopener">http://download.csdn.net/detail/ftx2540993425/9469275</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 是一个开源的应用容器引擎，开发者可以利用 Docker 打包自己的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。本书主要讲解了一些 Docker 的基本概念以及一些应用，整理了一些日常使用命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker info&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker ps (-a) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#列出最后运行的容器，包括运行中和已经停止的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker ps -l /docker ps -n 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#指定容器名称 first_example ,查找本地，pull remote ，启动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -i -t --name=first_example ubuntu /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker restart first_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker stop first_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建后台进程 -d 参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run --name daemon_example -d ubuntu /bin/sh -c &lt;span class=&quot;string&quot;&gt;&quot;while true;do echo hello world;sleep 1;done&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看进程日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker logs daemon_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker logs --tail 10 daemon_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker logs --tail 0 -f -t daemon_example &lt;span class=&quot;comment&quot;&gt;#不断输出,-t 输出时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看内部进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker top daemon_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在容器额外启动新进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# i 交互式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -t -i daemon_example /bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# d 后台式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker &lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; -d daemon_example touch test_exec.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 由于某种错误，进程停止，自动重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run --restart=always --name first_example -d ubuntu /bin/sh -c &lt;span class=&quot;string&quot;&gt;&quot;while true;do echo hello_world;sleep  1;done&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# inspect 深入容器获取更多信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker inspect first_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rm 删除容器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker rm first_example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# rmi 删除镜像之前先要使用 docker rm 命令删除掉依赖这个镜像的所有容器。因为docker的容器实际上是建立在镜像之上的可写层，所以会依赖下层的只读镜像层&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker rmi ubuntu_my_example&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="读书笔记" scheme="http://www.ixirong.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://www.ixirong.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Docker" scheme="http://www.ixirong.com/tags/Docker/"/>
    
      <category term="容器" scheme="http://www.ixirong.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 七牛同步插件的使用</title>
    <link href="http://www.ixirong.com/2016/10/31/how-to-use-hexo-qiniu-sync-plugin/"/>
    <id>http://www.ixirong.com/2016/10/31/how-to-use-hexo-qiniu-sync-plugin/</id>
    <published>2016-10-31T12:42:54.000Z</published>
    <updated>2020-03-10T08:25:43.594Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 七牛同步插件地址: <a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">https://github.com/gyk001/hexo-qiniu-sync</a><br>基本的安装、配置在插件主页也有过说明，按照配置即可，这里记录下遇到的坑。注意在 <code>_config.yml</code> 中不要配置插件栏如下，否则会报错找不到 <code>hexo server</code> 的命令，可参考问题:<a href="https://github.com/gyk001/hexo-qiniu-sync/issues/41" target="_blank" rel="noopener">hexo-qiniu-sync 安装好后，hexo s 命令不见了，hexo d 也提示问题</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plugins:</span><br><span class="line">  - hexo-qiniu-sync</span><br></pre></td></tr></table></figure><a id="more"></a><p>我的 Hexo 根目录下的 <code>_config.yml</code> 配置如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#plugins:</span><br><span class="line"># - hexo-qiniu-sync</span><br><span class="line"></span><br><span class="line">qiniu:</span><br><span class="line">  offline: false</span><br><span class="line">  sync: true</span><br><span class="line">  bucket: xirong</span><br><span class="line">  # secret_file: sec/qn.json or C:</span><br><span class="line">  access_key: yours</span><br><span class="line">  secret_key: yours</span><br><span class="line">  dirPrefix: static</span><br><span class="line">  urlPrefix: http://static.ixirong.com/static #开启了特殊域名所以使用自己的特殊域名</span><br><span class="line">  up_host: http://upload.qiniu.com #默认即可</span><br><span class="line">  local_dir: static</span><br><span class="line">  update_exist: true</span><br><span class="line">  image: </span><br><span class="line">    folder: images</span><br><span class="line">    extend: </span><br><span class="line">  js:</span><br><span class="line">    folder: js</span><br><span class="line">  css:</span><br><span class="line">    folder: css</span><br></pre></td></tr></table></figure><p>配置完成后，使用方法即在文章中想要放置图片的地方将下面的内容， 注意标签中的文件的路径在哪里，怎么写？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% qnimg qiniu-logo.png title:七牛云 logo alt:七牛云 &#39;class:&#39; extend:?imageView2&#x2F;2&#x2F;w&#x2F;550 %&#125;</span><br></pre></td></tr></table></figure><p>安装插件、配置完成后可以先执行 hexo 的任何命令，比如 <code>hexo g</code>，插件会自动生成配置中的路径，比如我的 <code>static</code> ，完整路径即在 hexo 文件夹的根目录下会生成 <code>static/js ,static/images ,static/css</code> 几个目录，把图片文件拷贝到 <code>images</code> 目录下面，即可以配置为图片文件名，比如 <code>qiniu-logo.png</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bash: hexo g                                                                                                                 </span><br><span class="line">INFO  -----------------------------------------------------------</span><br><span class="line">INFO  qiniu state: online</span><br><span class="line">INFO  qiniu sync:  <span class="literal">true</span></span><br><span class="line">INFO  qiniu <span class="built_in">local</span> dir:  static</span><br><span class="line">INFO  qiniu url:   http://static.ixirong.com/static</span><br><span class="line">INFO  -----------------------------------------------------------</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Now start qiniu sync.</span><br><span class="line">INFO  Need upload file num: 0</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 1.53 s</span><br></pre></td></tr></table></figure><p>标签中的 <code>?imageView2/2/w/550</code> 命令详细介绍可以参考七牛官网开发文档之图片处理 API: <a href="https://developer.qiniu.com/dora/manual/1279/basic-processing-images-imageview2" target="_blank" rel="noopener">https://developer.qiniu.com/dora/manual/1279/basic-processing-images-imageview2</a> ，介绍的很详细明了。</p><p>配置好后试一下 <code>hexo s</code> ，就会要上传的文件已经传递到七牛云你的存储空间了，访问本地<code>http://localhost:4000</code> 也能看到自己的图片了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">bash: hexo s                                                                                                                INFO  -----------------------------------------------------------</span><br><span class="line">INFO  qiniu state: online</span><br><span class="line">INFO  qiniu sync:  <span class="literal">true</span></span><br><span class="line">INFO  qiniu <span class="built_in">local</span> dir:  static</span><br><span class="line">INFO  qiniu url:   http://static.ixirong.com/static</span><br><span class="line">INFO  -----------------------------------------------------------</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Now start qiniu sync.</span><br><span class="line">INFO  Need upload file num: 0</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br><span class="line">INFO  Now start qiniu watch.</span><br><span class="line">INFO  Need upload file: /Users/xirong/GitHub/hexo-3.2/static/images/qiniu-logo.png</span><br><span class="line">INFO  xirong static/images/qiniu-logo.png /Users/xirong/GitHub/hexo-3.2/static/images/qiniu-logo.png</span><br><span class="line">INFO  Need upload file: /Users/xirong/GitHub/hexo-3.2/static/images/qiniu-logo.png</span><br><span class="line">INFO  xirong static/images/qiniu-logo.png /Users/xirong/GitHub/hexo-3.2/static/images/qiniu-logo.png</span><br><span class="line">INFO  Now start qiniu sync.</span><br><span class="line">INFO  Need upload file num: 2</span><br></pre></td></tr></table></figure><p>将文件上传到七牛云有两种方式 <code>hexo s</code> 和 <code>hexo qiniu sync|sync2</code> 的两个命令工具:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">qiniu sync plugin for hexo</span><br><span class="line">Usage: hexo qiniu  &lt;argument&gt;</span><br><span class="line">Description:</span><br><span class="line">hexo qiniu static files sync plugin</span><br><span class="line">Arguments:</span><br><span class="line">  info | i    Displays plugin version, aurthor or GitHub links</span><br><span class="line">  sync | s    Sync your static files to qiniu.</span><br><span class="line">  sync2 | s2  Sync your static files to qiniu.(And uploaded update files)</span><br></pre></td></tr></table></figure><p><strong>PS:</strong> 还没有使用过七牛云的朋友们可以尝试下，简单、极速、稳定、免费(够用)，<br>我的推荐链接: <a href="https://portal.qiniu.com/signup?code=3lkd3gonyuhjm" target="_blank" rel="noopener">https://portal.qiniu.com/signup?code=3lkd3gonyuhjm</a> ，通过连接注册你将获得更多的每月免费流量。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 七牛同步插件地址: &lt;a href=&quot;https://github.com/gyk001/hexo-qiniu-sync&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/gyk001/hexo-qiniu-sync&lt;/a&gt;&lt;br&gt;基本的安装、配置在插件主页也有过说明，按照配置即可，这里记录下遇到的坑。注意在 &lt;code&gt;_config.yml&lt;/code&gt; 中不要配置插件栏如下，否则会报错找不到 &lt;code&gt;hexo server&lt;/code&gt; 的命令，可参考问题:&lt;a href=&quot;https://github.com/gyk001/hexo-qiniu-sync/issues/41&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-qiniu-sync 安装好后，hexo s 命令不见了，hexo d 也提示问题&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;plugins:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - hexo-qiniu-sync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://www.ixirong.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://www.ixirong.com/tags/Hexo/"/>
    
      <category term="七牛云" scheme="http://www.ixirong.com/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>工程师的个人职业发展</title>
    <link href="http://www.ixirong.com/2016/10/28/senior-software-career-advise/"/>
    <id>http://www.ixirong.com/2016/10/28/senior-software-career-advise/</id>
    <published>2016-10-28T07:51:23.000Z</published>
    <updated>2020-03-10T08:20:54.280Z</updated>
    
    <content type="html"><![CDATA[<p>工作三四年后就会经常冒出想法，以后自己怎么发展，程序的道路怎么走，最近正好看到 <a href="http://weibo.com/u/1644288935" target="_blank" rel="noopener">@吴多益</a> 写的一篇文章叫做「高工的个人发展规划」，有些共鸣，分享给大家。</p><p>有几点感受，主要如下:</p><ul><li>理想远大: 不为自己设限制，想学习的指定目标去学，合理安排好时间，落实行动去执行。</li><li>主动探索: 只有你自己对自己的成长、生活负责，想要成为什么样子的人过什么样的生活，只能由你决定，决定了主动去实践，落实行动。</li><li>方向在哪里: 互联网上的资料，前辈的文章，大公司相关的实践，业界的发展趋势，新技术未来的方向，学术界的论文等。</li><li>持续学习: 读书入门，源码、英文文章深入分析。大量的阅读，笔记摘抄，整理吸收内化成自己的思想。</li><li>执行: 目标分解到步骤上，重要不紧急，不在价值观中不重要的事情上浪费时间，先做最困难、令人心烦的事情。</li><li>执行2: 严格按照 TODO 顺序做，不跳着做，先做完再做完美，完成比完美更重要，立刻行动，处理耗时时间短的问题。</li></ul><a id="more"></a><p>对于个人发展你有什么看法，欢迎留言或者公众号里面交流，完整的分享内容见 pdf。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作三四年后就会经常冒出想法，以后自己怎么发展，程序的道路怎么走，最近正好看到 &lt;a href=&quot;http://weibo.com/u/1644288935&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;@吴多益&lt;/a&gt; 写的一篇文章叫做「高工的个人发展规划」，有些共鸣，分享给大家。&lt;/p&gt;
&lt;p&gt;有几点感受，主要如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理想远大: 不为自己设限制，想学习的指定目标去学，合理安排好时间，落实行动去执行。&lt;/li&gt;
&lt;li&gt;主动探索: 只有你自己对自己的成长、生活负责，想要成为什么样子的人过什么样的生活，只能由你决定，决定了主动去实践，落实行动。&lt;/li&gt;
&lt;li&gt;方向在哪里: 互联网上的资料，前辈的文章，大公司相关的实践，业界的发展趋势，新技术未来的方向，学术界的论文等。&lt;/li&gt;
&lt;li&gt;持续学习: 读书入门，源码、英文文章深入分析。大量的阅读，笔记摘抄，整理吸收内化成自己的思想。&lt;/li&gt;
&lt;li&gt;执行: 目标分解到步骤上，重要不紧急，不在价值观中不重要的事情上浪费时间，先做最困难、令人心烦的事情。&lt;/li&gt;
&lt;li&gt;执行2: 严格按照 TODO 顺序做，不跳着做，先做完再做完美，完成比完美更重要，立刻行动，处理耗时时间短的问题。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="职业发展" scheme="http://www.ixirong.com/categories/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95/"/>
    
    
      <category term="成长" scheme="http://www.ixirong.com/tags/%E6%88%90%E9%95%BF/"/>
    
      <category term="职业发展" scheme="http://www.ixirong.com/tags/%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>mac osx 下 hexo DTraceProviderBindings 错误</title>
    <link href="http://www.ixirong.com/2016/08/30/solve-hexo-not-found-problem/"/>
    <id>http://www.ixirong.com/2016/08/30/solve-hexo-not-found-problem/</id>
    <published>2016-08-30T08:43:09.000Z</published>
    <updated>2016-12-05T02:05:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>hexo 安装常见错误，大部分在 <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">hexo-Troubleshooting</a> 可以解决掉，其中一个令人懊恼的错误如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; [Error: Cannot find module &#39;.&#x2F;build&#x2F;Release&#x2F;DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &#39;.&#x2F;build&#x2F;default&#x2F;DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &#39;.&#x2F;build&#x2F;Debug&#x2F;DTraceProviderBindings&#39;] code: &#39;MODULE_NOT_FOUND&#39; &#125;</span><br></pre></td></tr></table></figure><p>按照官网说明，google 许久找到的都是这个方法 ，详细参考 <a href="https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796" target="_blank" rel="noopener">github issues</a></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --no-optional</span><br></pre></td></tr></table></figure><p>通过查询列表 <code>npm list</code> 发现安装上了 <code>dtrace-provider@~0.6</code> ，于是尝试这卸载掉这个模板:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall dtrace-provider</span><br></pre></td></tr></table></figure><p>卸载后，在尝试 <code>hexo version</code> ，发现世界清静了，不再有这烦人的错误了。</p><p>2016-11-09 自己出现问题，hexo 3.2 的版本按照官方安装 hexo-cli 的时候就依赖了该组件，而且全局安装还需要 sudo 权限，折腾了一些时间后发现可以这么搞，记录下来:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先卸载掉所有的 hexo</span></span><br><span class="line">sudo npm uninstall -g hexo-cli</span><br><span class="line"><span class="comment"># 安装    </span></span><br><span class="line">sudo npm install hexo-cli --no-optional -g</span><br><span class="line"><span class="comment"># 然后到工作目录下安装，提示没有权限的话，手动将 node_modules 的权限改一下就好，不需要使用 sudo 权限</span></span><br><span class="line">npm install --no-optional</span><br><span class="line"><span class="comment"># 如果还有问题</span></span><br><span class="line">npm uninstall dtrace-provider</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo 安装常见错误，大部分在 &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-Troubleshooting&lt;/a&gt; 可以解决掉，其中一个令人懊恼的错误如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;#39;.&amp;#x2F;build&amp;#x2F;Release&amp;#x2F;DTraceProviderBindings&amp;#39;] code: &amp;#39;MODULE_NOT_FOUND&amp;#39; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;#39;.&amp;#x2F;build&amp;#x2F;default&amp;#x2F;DTraceProviderBindings&amp;#39;] code: &amp;#39;MODULE_NOT_FOUND&amp;#39; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;#39;.&amp;#x2F;build&amp;#x2F;Debug&amp;#x2F;DTraceProviderBindings&amp;#39;] code: &amp;#39;MODULE_NOT_FOUND&amp;#39; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;按照官网说明，google 许久找到的都是这个方法 ，详细参考 &lt;a href=&quot;https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github issues&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.ixirong.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.ixirong.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo/next常见插件使用技巧</title>
    <link href="http://www.ixirong.com/2016/08/17/hexo-next-plugin-test/"/>
    <id>http://www.ixirong.com/2016/08/17/hexo-next-plugin-test/</id>
    <published>2016-08-17T15:50:24.000Z</published>
    <updated>2017-08-09T14:51:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/plugins/" target="_blank" rel="noopener">hexo plugins</a> 上面一些喜欢的 plugin 插件在 next 主题上面进行测试，以及一些 hexo 的常用写作方法。<br>没有特殊说明，前面是在写文章时候的代码，后面是显示的效果，插件系列的需要先安装相应的插件才行。</p><h1 id="插件系列"><a href="#插件系列" class="headerlink" title="插件系列"></a>插件系列</h1><p>好用的插件列表推荐</p><h2 id="github-emojis"><a href="#github-emojis" class="headerlink" title="github-emojis"></a>github-emojis</h2><p>微笑表情 :smile:</p><h2 id="hexo-footnotes-角标用法"><a href="#hexo-footnotes-角标用法" class="headerlink" title="hexo-footnotes 角标用法"></a>hexo-footnotes 角标用法</h2><p>你好，这是角标1 <a href="角标1的说明内容">^1</a><br>hi，角标2 <a href="角标2的说明内容">^2</a></p><h2 id="hexo-pdf"><a href="#hexo-pdf" class="headerlink" title="hexo-pdf"></a><a href="https://github.com/superalsrk/hexo-pdf/" target="_blank" rel="noopener">hexo-pdf</a></h2><p><strong>Normal PDF</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %&#125;</span><br></pre></td></tr></table></figure><div class="pdf" target="http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf" height=""></div><a id="more"></a><p><strong>Google drive</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf https://drive.google.com/file/d/0B6qSwdwPxPRdTEliX0dhQ2JfUEU/preview %&#125;</span><br></pre></td></tr></table></figure><div class="pdf" target="https://drive.google.com/file/d/0B6qSwdwPxPRdTEliX0dhQ2JfUEU/preview" height=""></div><p><strong>Slideshare</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf http://www.slideshare.net/slideshow/embed_code/key/8Jl0hUt2OKUOOE %&#125;</span><br></pre></td></tr></table></figure><div class="pdf" target="http://www.slideshare.net/slideshow/embed_code/key/8Jl0hUt2OKUOOE" height=""></div><h2 id="hexo-qiniu-sync"><a href="#hexo-qiniu-sync" class="headerlink" title="hexo-qiniu-sync"></a><a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">hexo-qiniu-sync</a></h2><p>写博客时候，经常会在博客中插入一些图片，使得整篇文章阅读起来效果更好一些。 最初始的都是通过放到 <code>static/images</code> 目录下，然后在博客中引用相对路径 <code>![图片](../static/images/*.jpg)</code>  来达到效果，但这种图片的加载太慢，后来将博客的图床放到七牛上面，每次都需要先上传到七牛 buket 空间里，拷贝出 url 来，在 <code>![图片](http://qiniu.com/*.jpg)</code> 来达到效果，但文章写的多了，难免过于繁琐。所以此插件就出现了，配置好后，一句话 <code>{\% qnimg test/demo.png title:图片标题 alt:图片说明 &#39;class:class1 class2&#39; extend:?imageView2/2/w/600 %\}</code> 就可以自动将目录中的图片上传到七牛存储中，并自动引用其完整路径，非常省心，最终渲染成的完整为 <code>&lt;img title=&quot;图片标题&quot; alt=&quot;图片说明&quot; class=&quot;class1 class2&quot; src=&quot;http://gyk001.u.qiniudn.com/images/test/demo.png?imageView2/2/w/600&quot;&gt;</code> 。如何配置参考其 github 主页 <a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener">https://github.com/gyk001/hexo-qiniu-sync</a></p><h1 id="常见技巧"><a href="#常见技巧" class="headerlink" title="常见技巧"></a>常见技巧</h1><h2 id="适配手机版本的视频分享"><a href="#适配手机版本的视频分享" class="headerlink" title="适配手机版本的视频分享"></a>适配手机版本的视频分享</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"iframe-video"</span>  <span class="attr">src</span>=<span class="string">"http://v.qq.com/iframe/player.html?vid=g0167043an5&amp;tiny=0&amp;auto=0"</span> <span class="attr">allowfullscreen</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe class="iframe-video"  src="http://v.qq.com/iframe/player.html?vid=g0167043an5&tiny=0&auto=0" allowfullscreen></iframe><h2 id="slide-share-分享ppt文章，并控制大小"><a href="#slide-share-分享ppt文章，并控制大小" class="headerlink" title="slide share 分享ppt文章，并控制大小"></a>slide share 分享ppt文章，并控制大小</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"//www.slideshare.net/slideshow/embed_code/key/e4wEkRJuatBp7w"</span> <span class="attr">width</span>=<span class="string">"425"</span> <span class="attr">height</span>=<span class="string">"355"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">scrolling</span>=<span class="string">"no"</span> <span class="attr">style</span>=<span class="string">"border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;"</span> <span class="attr">allowfullscreen</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-bottom:5px"</span>&gt;</span> <span class="tag">&lt;<span class="name">strong</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"//www.slideshare.net/kaiyannju/hbase-11999745"</span> <span class="attr">title</span>=<span class="string">"Hbase介绍"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Hbase介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">strong</span>&gt;</span> from <span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"//www.slideshare.net/kaiyannju"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>kaiyannju<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><iframe src="//www.slideshare.net/slideshow/embed_code/key/e4wEkRJuatBp7w" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/kaiyannju/hbase-11999745" title="Hbase介绍" target="_blank">Hbase介绍</a> </strong> from <strong><a href="//www.slideshare.net/kaiyannju" target="_blank">kaiyannju</a></strong> </div><h2 id="table-的使用方法"><a href="#table-的使用方法" class="headerlink" title="table 的使用方法"></a>table 的使用方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Tables | Are | Cool |</span><br><span class="line">|:-------------:|:-------------:|:-----:|</span><br><span class="line">| col 3 is | right-aligned | 1600|</span><br><span class="line">|col2is|centered|12 |</span><br><span class="line">| zebra stripes | are neat | $1 |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">Tables</th><th align="center">Are</th><th align="center">Cool</th></tr></thead><tbody><tr><td align="center">col 3 is</td><td align="center">right-aligned</td><td align="center">1600</td></tr><tr><td align="center">col2is</td><td align="center">centered</td><td align="center">12</td></tr><tr><td align="center">zebra stripes</td><td align="center">are neat</td><td align="center">$1</td></tr></tbody></table><h2 id="手写html-的table"><a href="#手写html-的table" class="headerlink" title="手写html 的table"></a>手写html 的table</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>vpn<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>shadowsocks<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>简单，一键翻墙<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>简单，一键翻墙<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>全局，代理浏览器、各种app、所有走网络的都经过vpn服务器<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>只有浏览器（可以手动设置代理其他app）<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>免费、收费服务商很多<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>免费、收费服务商很多<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>速度可以<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>速度很快，香港、新加坡几十毫秒<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:right"</span>&gt;</span>平台性稍差，有些做的也不错了，总体跨平台性差<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span>支持各平台客户端，跨平台性强<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：</p><table><thead><tr><th style="text-align:right">vpn</th><th style="text-align:center">shadowsocks</th></tr></thead><tbody><tr><td style="text-align:right">简单，一键翻墙</td><td style="text-align:center">简单，一键翻墙</td></tr><tr><td style="text-align:right">全局，代理浏览器、各种app、所有走网络的都经过vpn服务器</td><td style="text-align:center">只有浏览器（可以手动设置代理其他app）</td></tr><tr><td style="text-align:right">免费、收费服务商很多</td><td style="text-align:center">免费、收费服务商很多</td></tr><tr><td style="text-align:right">速度可以</td><td style="text-align:center">速度很快，香港、新加坡几十毫秒</td></tr><tr><td style="text-align:right">平台性稍差，有些做的也不错了，总体跨平台性差</td><td style="text-align:center">支持各平台客户端，跨平台性强</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://hexo.io/plugins/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo plugins&lt;/a&gt; 上面一些喜欢的 plugin 插件在 next 主题上面进行测试，以及一些 hexo 的常用写作方法。&lt;br&gt;没有特殊说明，前面是在写文章时候的代码，后面是显示的效果，插件系列的需要先安装相应的插件才行。&lt;/p&gt;
&lt;h1 id=&quot;插件系列&quot;&gt;&lt;a href=&quot;#插件系列&quot; class=&quot;headerlink&quot; title=&quot;插件系列&quot;&gt;&lt;/a&gt;插件系列&lt;/h1&gt;&lt;p&gt;好用的插件列表推荐&lt;/p&gt;
&lt;h2 id=&quot;github-emojis&quot;&gt;&lt;a href=&quot;#github-emojis&quot; class=&quot;headerlink&quot; title=&quot;github-emojis&quot;&gt;&lt;/a&gt;github-emojis&lt;/h2&gt;&lt;p&gt;微笑表情 :smile:&lt;/p&gt;
&lt;h2 id=&quot;hexo-footnotes-角标用法&quot;&gt;&lt;a href=&quot;#hexo-footnotes-角标用法&quot; class=&quot;headerlink&quot; title=&quot;hexo-footnotes 角标用法&quot;&gt;&lt;/a&gt;hexo-footnotes 角标用法&lt;/h2&gt;&lt;p&gt;你好，这是角标1 &lt;a href=&quot;角标1的说明内容&quot;&gt;^1&lt;/a&gt;&lt;br&gt;hi，角标2 &lt;a href=&quot;角标2的说明内容&quot;&gt;^2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;hexo-pdf&quot;&gt;&lt;a href=&quot;#hexo-pdf&quot; class=&quot;headerlink&quot; title=&quot;hexo-pdf&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/superalsrk/hexo-pdf/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-pdf&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Normal PDF&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;div class=&quot;pdf&quot; target=&quot;http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf&quot; height=&quot;&quot;&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.ixirong.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.ixirong.com/tags/hexo/"/>
    
      <category term="next主题" scheme="http://www.ixirong.com/tags/next%E4%B8%BB%E9%A2%98/"/>
    
      <category term="hexo插件" scheme="http://www.ixirong.com/tags/hexo%E6%8F%92%E4%BB%B6/"/>
    
      <category term="hexo技巧" scheme="http://www.ixirong.com/tags/hexo%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>测试 next markdown 显示效果</title>
    <link href="http://www.ixirong.com/2016/08/15/welcome-markdown-test/"/>
    <id>http://www.ixirong.com/2016/08/15/welcome-markdown-test/</id>
    <published>2016-08-15T11:52:05.000Z</published>
    <updated>2016-08-31T16:11:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>马克飞象</strong>是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：</p><ul><li><strong>功能丰富</strong> ：支持高亮代码块、<em>LaTeX</em> 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；</li><li><strong>得心应手</strong> ：简洁高效的编辑器，提供<a href="http://maxiang.info/client_zh" target="_blank" rel="noopener">桌面客户端</a>以及<a href="https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop" target="_blank" rel="noopener">离线Chrome App</a>，支持移动端 Web；</li><li><strong>深度整合</strong> ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。</li></ul><hr><!-- toc --><h2 id="Markdown简介"><a href="#Markdown简介" class="headerlink" title="Markdown简介"></a>Markdown简介</h2><blockquote><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener">维基百科</a></p></blockquote><p>正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为<strong>粗体</strong>或者<em>斜体</em>，创建一个<a href="http://www.example.com" target="_blank" rel="noopener">链接</a>或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按<code>Cmd + /</code>查看帮助。 </p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h3><p>可以创建行内公式，例如 $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$。或者块级公式：</p><p>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Qty</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">1600 USD</td><td align="center">5</td></tr><tr><td align="left">Phone</td><td align="right">12 USD</td><td align="center">12</td></tr><tr><td align="left">Pipe</td><td align="right">1 USD</td><td align="center">234</td></tr></tbody></table><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: Start</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line">op&#x3D;&gt;operation: My Operation</span><br><span class="line">cond&#x3D;&gt;condition: Yes or No?</span><br><span class="line"></span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br></pre></td></tr></table></figure><p>以及时序图:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示：</strong>想了解更多，请查看<strong>流程图</strong><a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">语法</a>以及<strong>时序图</strong><a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">语法</a>。</p></blockquote><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p>使用 <code>- [ ]</code> 和 <code>- [x]</code> 语法可以创建复选框，实现 todo-list 等功能。例如：</p><ul><li><input checked="" disabled="" type="checkbox"> 已完成事项</li><li><input disabled="" type="checkbox"> 待办事项1</li><li><input disabled="" type="checkbox"> 待办事项2</li></ul><blockquote><p><strong>注意：</strong>目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在<strong>马克飞象</strong>中修改 Markdown 原文才可生效。下个版本将会全面支持。</p></blockquote><h2 id="印象笔记相关"><a href="#印象笔记相关" class="headerlink" title="印象笔记相关"></a>印象笔记相关</h2><h3 id="笔记本和标签"><a href="#笔记本和标签" class="headerlink" title="笔记本和标签"></a>笔记本和标签</h3><p><strong>马克飞象</strong>增加了<code>@(笔记本)[标签A|标签B]</code>语法, 以选择笔记本和添加标签。 <strong>绑定账号后</strong>， 输入<code>(</code>自动会出现笔记本列表，请从中选择。</p><h3 id="笔记标题"><a href="#笔记标题" class="headerlink" title="笔记标题"></a>笔记标题</h3><p><strong>马克飞象</strong>会自动使用文档内出现的第一个标题作为笔记标题。例如本文，就是第一行的 <code>欢迎使用马克飞象</code>。</p><h3 id="快捷编辑"><a href="#快捷编辑" class="headerlink" title="快捷编辑"></a>快捷编辑</h3><p>保存在印象笔记中的笔记，右上角会有一个红色的编辑按钮，点击后会回到<strong>马克飞象</strong>中打开并编辑该笔记。</p><blockquote><p><strong>注意：</strong>目前用户在印象笔记中单方面做的任何修改，马克飞象是无法自动感知和更新的。所以请务必回到马克飞象编辑。</p></blockquote><h3 id="数据同步"><a href="#数据同步" class="headerlink" title="数据同步"></a>数据同步</h3><p><strong>马克飞象</strong>通过<strong>将Markdown原文以隐藏内容保存在笔记中</strong>的精妙设计，实现了对Markdown的存储和再次编辑。既解决了其他产品只是单向导出HTML的单薄，又规避了服务端存储Markdown带来的隐私安全问题。这样，服务端仅作为对印象笔记 API调用和数据转换之用。</p><blockquote><p><strong>隐私声明：用户所有的笔记数据，均保存在印象笔记中。马克飞象不存储用户的任何笔记数据。</strong></p></blockquote><h3 id="离线存储"><a href="#离线存储" class="headerlink" title="离线存储"></a>离线存储</h3><p><strong>马克飞象</strong>使用浏览器离线存储将内容实时保存在本地，不必担心网络断掉或浏览器崩溃。为了节省空间和避免冲突，已同步至印象笔记并且不再修改的笔记将删除部分本地缓存，不过依然可以随时通过<code>文档管理</code>打开。</p><blockquote><p><strong>注意：</strong>虽然浏览器存储大部分时候都比较可靠，但印象笔记作为专业云存储，更值得信赖。以防万一，<strong>请务必经常及时同步到印象笔记</strong>。</p></blockquote><h2 id="编辑器相关"><a href="#编辑器相关" class="headerlink" title="编辑器相关"></a>编辑器相关</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>右侧系统菜单（快捷键<code>Cmd + M</code>）的<code>设置</code>中，提供了界面字体、字号、自定义CSS、vim/emacs 键盘模式等高级选项。</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>帮助    <code>Cmd + /</code><br>同步文档    <code>Cmd + S</code><br>创建文档    <code>Cmd + Opt + N</code><br>最大化编辑器    <code>Cmd + Enter</code><br>预览文档 <code>Cmd + Opt + Enter</code><br>文档管理    <code>Cmd + O</code><br>系统菜单    <code>Cmd + M</code> </p><p>加粗    <code>Cmd + B</code><br>插入图片    <code>Cmd + G</code><br>插入链接    <code>Cmd + L</code><br>提升标题    <code>Cmd + H</code></p><h2 id="关于收费"><a href="#关于收费" class="headerlink" title="关于收费"></a>关于收费</h2><p><strong>马克飞象</strong>为新用户提供 10 天的试用期，试用期过后需要<a href="maxiang.info/vip.html">续费</a>才能继续使用。未购买或者未及时续费，将不能同步新的笔记。之前保存过的笔记依然可以编辑。</p><h2 id="反馈与建议"><a href="#反馈与建议" class="headerlink" title="反馈与建议"></a>反馈与建议</h2><ul><li>微博：<a href="http://weibo.com/u/2788354117" target="_blank" rel="noopener">@马克飞象</a>，<a href="http://weibo.com/ggock" target="_blank" rel="noopener" title="开发者个人账号">@GGock</a></li><li>邮箱：<a href="mailto:&#x68;&#117;&#115;&#x74;&#x67;&#x6f;&#x63;&#107;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#x68;&#117;&#115;&#x74;&#x67;&#x6f;&#x63;&#107;&#64;&#x67;&#109;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a></li></ul><hr><p>感谢阅读这份帮助文档。请点击右上角，绑定印象笔记账号，开启全新的记录与分享体验吧。</p><p>[^demo]: 这是一个示例脚注。请查阅 <a href="https://github.com/fletcher/MultiMarkdown/wiki/MultiMarkdown-Syntax-Guide#footnotes" target="_blank" rel="noopener">MultiMarkdown 文档</a> 关于脚注的说明。 <strong>限制：</strong> 印象笔记的笔记内容使用 <a href="https://dev.yinxiang.com/doc/articles/enml.php" target="_blank" rel="noopener">ENML</a> 格式，基于 HTML，但是不支持某些标签和属性，例如id，这就导致<code>脚注</code>和<code>TOC</code>无法正常点击。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;马克飞象&lt;/strong&gt;是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能丰富&lt;/strong&gt; ：支持高亮代码块、&lt;em&gt;LaTeX&lt;/em&gt; 公式、流程图，本地图片以及附件上传，甚至截图粘贴，工作学习好帮手；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;得心应手&lt;/strong&gt; ：简洁高效的编辑器，提供&lt;a href=&quot;http://maxiang.info/client_zh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;桌面客户端&lt;/a&gt;以及&lt;a href=&quot;https://chrome.google.com/webstore/detail/kidnkfckhbdkfgbicccmdggmpgogehop&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;离线Chrome App&lt;/a&gt;，支持移动端 Web；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;深度整合&lt;/strong&gt; ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;!-- toc --&gt;


&lt;h2 id=&quot;Markdown简介&quot;&gt;&lt;a href=&quot;#Markdown简介&quot; class=&quot;headerlink&quot; title=&quot;Markdown简介&quot;&gt;&lt;/a&gt;Markdown简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— &lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;维基百科&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为&lt;strong&gt;粗体&lt;/strong&gt;或者&lt;em&gt;斜体&lt;/em&gt;，创建一个&lt;a href=&quot;http://www.example.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按&lt;code&gt;Cmd + /&lt;/code&gt;查看帮助。 &lt;/p&gt;
&lt;h3 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@requires_authorization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;somefunc&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(param1=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, param2=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;A docstring&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; param1 &amp;gt; param2: &lt;span class=&quot;comment&quot;&gt;# interesting&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Greater&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (param2 - param1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SomeClass&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;message = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;interpreter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;meta&quot;&gt;... &lt;/span&gt;prompt&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="编辑器" scheme="http://www.ixirong.com/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    
      <category term="编辑器" scheme="http://www.ixirong.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="markdown" scheme="http://www.ixirong.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>混乱的 Java 日志体系</title>
    <link href="http://www.ixirong.com/2016/03/13/intro-to-java-log/"/>
    <id>http://www.ixirong.com/2016/03/13/intro-to-java-log/</id>
    <published>2016-03-13T10:41:49.000Z</published>
    <updated>2020-03-10T07:35:49.147Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://static.oschina.net/uploads/space/2015/0430/074446_6Vgr_2287728.png" alt="current application log and slf4j"></p><p>作为一名 Java 程序员，日常开发工作中肯定会接触日志系统，但是众多的框架，包括 Log4j、Log4j2、Logback、Slf4j、Apache Common logging 等等，引用的 maven 依赖众多，到底可以去掉哪些，一行 <code>LoggerFactory.getLogger(LogbackTest.class)</code> 后做了哪些工作，怎么去找的配置文件，这些还是有很多细节可以去研究的。</p><h2 id="一、困扰的疑惑"><a href="#一、困扰的疑惑" class="headerlink" title="一、困扰的疑惑"></a>一、困扰的疑惑</h2><p>目前的日志框架有 jdk 自带的 logging，log4j1、log4j2、logback ，这些框架都自己定制了日志 API ，并且有相应的实现；目前用于实现日志统一的框架 Apache commons-logging、slf4j ，遵循「面向接口编程」的原则，这两大框架可以让用户在程序运行期间去选择具体的日志实现系统（log4j1\log4j2\logback等）来记录日志，是统一抽象出来的一些接口。</p><p>这些日志系统涉及到的繁杂的各种集成 jar 包，如下：</p><ul><li>log4j、log4j-api、log4j-core</li><li>log4j-1.2-api、log4j-jcl、log4j-slf4j-impl、log4j-jul</li><li>logback-core、logback-classic、logback-access</li><li>commons-logging</li><li>slf4j-api、slf4j-log4j12、slf4j-simple、jcl-over-slf4j、slf4j-jdk14、log4j-over-slf4j、slf4j-jcl</li></ul><a id="more"></a><p><strong>log4j</strong><br>Apache 的一个开放源代码项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件、甚至是套接口服务 器、NT的事件记录器、UNIX Syslog守护进程等；用户也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，用户能够更加细致地控制日志的生成过程。这些可以通过一个 配置文件来灵活地进行配置，而不需要修改程序代码。最新的目前版本为<code>log4j 1.2</code>，maven 依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Logback</strong><br>Logback 是由 log4j 创始人设计的又一个开源日记组件，Logback 当前分成三个模块：logback-core,logback- classic和logback-access。logback-core是其它两个模块的基础模块，logback-classic是log4j的一个 改良版本。此外logback-classic 完整实现 SLF4J API 使你可以很方便地更换成其它日记系统如log4j或JDK14 Logging。logback-access访问模块与Servlet容器集成提供通过Http来访问日记的功能。maven 最新依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Logback 作为一个通用可靠、快速灵活的日志框架，将作为 Log4j 的替代和 SLF4J 组成新的日志系统的完整实现。Logback 声称具有极佳的性能，“ 某些关键操作，比如判定是否记录一条日志语句的操作，其性能得到了显著的提高。这个操作在LogBack中需要3纳秒，而在Log4J中则需要30纳秒。 LogBack 创建记录器（logger）的速度也更快：13微秒，而在Log4J中需要23微秒。更重要的是，它获取已存在的记录器只需94纳秒，而 Log4J需要2234纳秒，时间减少到了1/23。跟JUL相比的性能提高也是显著的”。另外，Logback的所有文档是全面免费提供的，不象Log4J那样只提供部分免费文档而需要用户去购买付费文档。具体包括：</p><ul><li>更快的执行速度</li><li>更充分的测试</li><li>logback-classic 非常自然的实现了SLF4J</li><li>使用XML配置文件或者Groovy</li><li>自动重新载入配置文件</li><li>优雅地从I/O错误中恢复</li><li>自动清除旧的日志归档文件</li><li>自动压缩归档日志文件</li><li>谨慎模式</li><li>Lilith</li><li>配置文件中的条件处理</li><li>更丰富的过滤</li><li>Logback-access模块，提供了通过HTTP访问日志的能力，是logback不可或缺的组成部分</li></ul><p>详细的介绍可以参考：<a href="http://www.oschina.net/translate/reasons-to-prefer-logbak-over-log4j" target="_blank" rel="noopener">http://www.oschina.net/translate/reasons-to-prefer-logbak-over-log4j</a></p><p>越来越多的开源项目依赖 Logback：<br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/java_log/1457864628737.png" alt="Alt text"></p><p><strong>SLF4J</strong><br>简单日记门面(Facade) SLF4J 是为各种 loging APIs 提供一个简单统一的接口，从而使得最终用户能够在部署的时候配置自己希望的loging APIs实现。 Logging API实现既可以选择直接实现SLF4J接的loging APIs如： NLOG4J、SimpleLogger。也可以通过SLF4J提供的API实现来开发相应的适配器如Log4jLoggerAdapter、JDK14LoggerAdapter。</p><p><strong>Apache Common-Logging</strong><br>目前广泛使用的Java日志门面库。通过动态查找的机制，在程序运行时自动找出真正使用的日志库。但由于它使用了ClassLoader寻找和载入底层的日志库， 导致了象OSGI这样的框架无法正常工作，由于其不同的插件使用自己的ClassLoader。 OSGI的这种机制保证了插件互相独立，然而确使Apache Common-Logging无法工作。</p><p>SLF4J 库类似于 Apache Common-Logging。但是，他在编译时静态绑定真正的Log库。使用SLF4J时，如果你需要使用某一种日志实现，那么你必须选择正确的SLF4J的jar包的集合，如此便可以在OSGI中使用了。另外，SLF4J 支持参数化的log字符串，避免了之前为了减少字符串拼接的性能损耗而不得不写的<code>if(logger.isDebugEnable())</code>，现在你可以直接写：<code>logger.debug(“current user is: {}”, user)</code>。拼装消息被推迟到了它能够确定是不是要显示这条消息的时候，但是获取参数的代价并没有幸免。同时，日志中的参数若超过三个，则需要将参数以数组的形式传入，如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Object[] params = &#123;value1, value2, value3&#125;;</span><br><span class="line">logger.debug(“first value: &#123;&#125;, second value: &#123;&#125; and third value: &#123;&#125;.”, params);</span><br></pre></td></tr></table></figure><p>现在，Hibernate、Jetty、Spring-OSGi、Wicket和MINA等越来越多的开源项目都已经迁移到了SLF4J，由此可见SLF4J的影响力不可忽视。<br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/java_log/1457864552584.png" alt="Alt text"></p><h2 id="二、how-to-use"><a href="#二、how-to-use" class="headerlink" title="二、how to use"></a>二、how to use</h2><p>介绍完这些日志框架后，那么这些东西怎么用，之间的依赖是什么样子的，还有启动初始化的过程究竟干了什么，怎么找到相应的实现类及配置的？</p><p>这四篇文章是我目前在互联网上面发现的写的最详细的介绍，请参考：</p><ol><li><a href="http://my.oschina.net/pingpangkuangmo/blog/406618#OSC_h1_1" target="_blank" rel="noopener">jdk-logging、log4j、logback日志介绍及原理</a> 三个日志系统的实现机制介绍</li><li><a href="http://my.oschina.net/pingpangkuangmo/blog/407895" target="_blank" rel="noopener">commons-logging与jdk-logging、log4j1、log4j2、logback的集成原理</a> Apache Commons-logging 通用日志框架与日志系统的机制介绍</li><li><a href="http://my.oschina.net/pingpangkuangmo/blog/408382" target="_blank" rel="noopener">SLF4J 与 jdk-logging、log4j1、log4j2、logback的集成原理</a> SLF4J 通用日志框架与具体日志实现系统的机制机制介绍，包括依赖的jar包，jar冲突处理等；</li><li><a href="http://my.oschina.net/pingpangkuangmo/blog/410224" target="_blank" rel="noopener">slf4j、jcl、jul、log4j1、log4j2、logback大总结</a> 各个组件的jar包以及目前系统日志需要切换实现方式的方法，推荐阅读。</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  =================================================  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  日志及相关依赖（用slf4j+logback代替jcl+log4j）  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  =================================================  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 强制使用 logback的绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 强制使用 logback的绑定,这里去除对log4j 的绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>99.0-does-not-exist<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- slf4j 的桥接器,将第三方类库对 log4j 的调用 delegate 到 slf api 上 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这个桥接器是自己做的,主要是我们依赖的类库存在很多硬编码的引用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.14-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 强制排除 log4j 的依赖,全部 delegate 到 log4j-over-slf4j 上 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>99.0-does-not-exist<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>apache-log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>999-not-exist<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- slf logback 配置结束 --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、结束"><a href="#三、结束" class="headerlink" title="三、结束"></a>三、结束</h2><p>通过上述阅读，对「混乱的 java 日志体系」应该有了较清楚的理解，但是真的存在项目需要切换日志系统的情况吗？根据我的理解，很多当你的系统越来越庞大，越来越复杂需要系统重构，解决性能的时候，可以考虑升级你当前的日志配置。如果你是新启用的项目，直接考虑使用<code>Logback + SLF4j</code> 即可。</p><p>参考资料</p><ul><li><a href="https://logging.apache.org/" target="_blank" rel="noopener">Apache logging services</a></li><li><a href="http://logback.qos.ch/index.html" target="_blank" rel="noopener">LOGBack home page</a></li><li><a href="https://victorjan.wordpress.com/2010/05/13/java%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6%EF%BC%9ASLF4J%EF%BC%8C-apache-common-logging%EF%BC%8C-log4j%E5%92%8Clogback/" target="_blank" rel="noopener">Java日志框架：SLF4J， Apache Common-Logging， Log4J和Logback</a></li><li><a href="http://my.oschina.net/pingpangkuangmo/blog/406618#OSC_h1_1" target="_blank" rel="noopener">jdk-logging、log4j、logback日志介绍及原理</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://static.oschina.net/uploads/space/2015/0430/074446_6Vgr_2287728.png&quot; alt=&quot;current application log and slf4j&quot;&gt;&lt;/p&gt;
&lt;p&gt;作为一名 Java 程序员，日常开发工作中肯定会接触日志系统，但是众多的框架，包括 Log4j、Log4j2、Logback、Slf4j、Apache Common logging 等等，引用的 maven 依赖众多，到底可以去掉哪些，一行 &lt;code&gt;LoggerFactory.getLogger(LogbackTest.class)&lt;/code&gt; 后做了哪些工作，怎么去找的配置文件，这些还是有很多细节可以去研究的。&lt;/p&gt;
&lt;h2 id=&quot;一、困扰的疑惑&quot;&gt;&lt;a href=&quot;#一、困扰的疑惑&quot; class=&quot;headerlink&quot; title=&quot;一、困扰的疑惑&quot;&gt;&lt;/a&gt;一、困扰的疑惑&lt;/h2&gt;&lt;p&gt;目前的日志框架有 jdk 自带的 logging，log4j1、log4j2、logback ，这些框架都自己定制了日志 API ，并且有相应的实现；目前用于实现日志统一的框架 Apache commons-logging、slf4j ，遵循「面向接口编程」的原则，这两大框架可以让用户在程序运行期间去选择具体的日志实现系统（log4j1\log4j2\logback等）来记录日志，是统一抽象出来的一些接口。&lt;/p&gt;
&lt;p&gt;这些日志系统涉及到的繁杂的各种集成 jar 包，如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;log4j、log4j-api、log4j-core&lt;/li&gt;
&lt;li&gt;log4j-1.2-api、log4j-jcl、log4j-slf4j-impl、log4j-jul&lt;/li&gt;
&lt;li&gt;logback-core、logback-classic、logback-access&lt;/li&gt;
&lt;li&gt;commons-logging&lt;/li&gt;
&lt;li&gt;slf4j-api、slf4j-log4j12、slf4j-simple、jcl-over-slf4j、slf4j-jdk14、log4j-over-slf4j、slf4j-jcl&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.ixirong.com/categories/java/"/>
    
    
      <category term="日志" scheme="http://www.ixirong.com/tags/%E6%97%A5%E5%BF%97/"/>
    
      <category term="java" scheme="http://www.ixirong.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Selenium Webdriver 基于浏览器的自动化测试</title>
    <link href="http://www.ixirong.com/2016/03/06/how-selenium-webdriver-works/"/>
    <id>http://www.ixirong.com/2016/03/06/how-selenium-webdriver-works/</id>
    <published>2016-03-06T09:35:58.000Z</published>
    <updated>2020-03-10T07:35:49.146Z</updated>
    
    <content type="html"><![CDATA[<p><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/selenium%2F1457265240273.png" alt="Selenium HQ"></p><p>SeleniumHQ 是一款基于浏览器开源的自动化测试组件，支持 win、linux、Mac 、Android、Ios 几大平台上的 IE、Firefox、Chrome 等浏览器，也支持模拟安卓、ios、winphone设置上的浏览器，「一切重复操作的流程均可自动化」，对测试来讲，大大提高测试程序对不同平台不同浏览器兼容性的效率。</p><p>SeleniumHQ  2.0 组件包括 Selenium webdriver、Selenium IDE 两大组件，与之前的1.0版本有所区别（具体区别可以参考<a href="https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/introduction.html" target="_blank" rel="noopener">Selenium 发展历史</a>）。使用Selenium IDE，可以通过安装Firefox浏览器插件，录制你所有的操作，也就是说，你操作一遍业务流程，后续的测试回归均可以交给 Selenium IDE 录制下来的程序去测试。优点就是简单，不需要编写代码，缺陷是如果业务流程发生了改变，需要重新录制脚本。使用Selenium Webdriver 可以编写代码，指定程序处理逻辑，比如 form 表单验证登录、提交返回结果验证等，功能强大，可以说能满足所有的场景。</p><a id="more"></a><h1 id="一、基础使用"><a href="#一、基础使用" class="headerlink" title="一、基础使用"></a>一、基础使用</h1><p>Selenium Webdriver 支持 Java、C#、Python、Ruby、Php、Perl、Javascript 等几种语言，不过不同的语言实现功能的完整性略有区别，下文介绍下 Java 客户端的使用方法。</p><h2 id="1-1-完整实例"><a href="#1-1-完整实例" class="headerlink" title="1.1 完整实例"></a>1.1 完整实例</h2><p>创建一个基于 maven 的 java 项目 ，使用 Selenium Webdriver 只需要引用相依的依赖即可：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.seleniumhq.selenium<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>selenium-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 目前最新版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.49.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个简单的使用例子：通过程序打开百度首页，收入搜索关键字「两会」，搜索相应的结果内容。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// 如果你的 FireFox 没有安装在默认目录，那么必须在程序中设置</span></span><br><span class="line"><span class="comment">// System.setProperty("webdriver.firefox.bin", "D:\\Program Files\\Mozilla Firefox\\firefox.exe");</span></span><br><span class="line">       <span class="comment">// 创建一个 FireFox 的浏览器实例</span></span><br><span class="line">       WebDriver driver = <span class="keyword">new</span> FirefoxDriver();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 让浏览器访问 Baidu</span></span><br><span class="line">       driver.get(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line">       <span class="comment">// 用下面代码也可以实现</span></span><br><span class="line">       <span class="comment">// driver.navigate().to("http://www.baidu.com");</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 获取 网页的 title</span></span><br><span class="line">       System.out.println(<span class="string">"1 Page title is: "</span> + driver.getTitle());</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 通过 id 找到 input 的 DOM</span></span><br><span class="line">       WebElement element = driver.findElement(By.id(<span class="string">"kw"</span>));</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 输入关键字</span></span><br><span class="line">       element.sendKeys(<span class="string">"两会"</span>);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 提交 input 所在的  form</span></span><br><span class="line">       element.submit();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 通过判断 title 内容等待搜索页面加载完毕，间隔10秒</span></span><br><span class="line">       (<span class="keyword">new</span> WebDriverWait(driver, <span class="number">10</span>)).until(<span class="keyword">new</span> ExpectedCondition&lt;Boolean&gt;() &#123;</span><br><span class="line">           <span class="function"><span class="keyword">public</span> Boolean <span class="title">apply</span><span class="params">(WebDriver d)</span> </span>&#123;</span><br><span class="line">               <span class="keyword">return</span> d.getTitle().toLowerCase().endsWith(<span class="string">"两会"</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 显示搜索结果页面的 title</span></span><br><span class="line">       System.out.println(<span class="string">"2 Page title is: "</span> + driver.getTitle());</span><br><span class="line"></span><br><span class="line">       <span class="comment">//关闭浏览器</span></span><br><span class="line">       driver.quit();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="1-2-支持浏览器"><a href="#1-2-支持浏览器" class="headerlink" title="1.2 支持浏览器"></a>1.2 支持浏览器</h2><p>Selenium WebDriver 支持如下浏览器，在所有支持这些浏览器的操作系统中能都运行良好。</p><ul><li>Google Chrome</li><li>Internet Explorer 6, 7, 8, 9, 10 - 32 and 64-bit where applicable</li><li>Firefox: latest ESR, previous ESR, current release, one previous release</li><li>Safari</li><li>Opera</li><li>HtmlUnit</li><li>phantomjs</li><li>Android (with Selendroid or appium)</li><li>iOS (with ios-driver or appium)</li></ul><p>Selenium WebDriver 直接通过浏览器自动化的本地接口来调用浏览器。如何直接调用，和调用的细节取决于你使用什么浏览器，所以需要相应平台相应的浏览器「驱动」，使用方式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// firefox 浏览器</span></span><br><span class="line"><span class="comment">// firexfox 是原生支持的，不需要特殊的浏览器驱动。如果安装目录不是默认的，需要指定相应的环境变量</span></span><br><span class="line"><span class="comment">// System.setProperty("webdriver.firefox.bin", "D:\\Program Files\\Mozilla Firefox\\firefox.exe");</span></span><br><span class="line">WebDriver driver = <span class="keyword">new</span> FirefoxDriver();</span><br><span class="line"></span><br><span class="line"><span class="comment">// chrome 浏览器</span></span><br><span class="line"><span class="comment">// ChromeDriver is maintained / supported by the Chromium project iteslf. https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver</span></span><br><span class="line"><span class="comment">// 下载 ChromeDriver：https://sites.google.com/a/chromium.org/chromedriver/downloads</span></span><br><span class="line"><span class="comment">// Optional, if not specified, WebDriver will search your path for chromedriver.</span></span><br><span class="line"><span class="comment">// System.setProperty("webdriver.chrome.driver", "/path/to/chromedriver");</span></span><br><span class="line">WebDriver driver = <span class="keyword">new</span> ChromeDriver();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Safari、opera、Android、ios 等浏览器使用同理，下载安装相应的驱动，非默认目录需要设置 System.setProperty 属性</span></span><br><span class="line"><span class="comment">// 下载地址及参考：https://github.com/SeleniumHQ/selenium/wiki</span></span><br></pre></td></tr></table></figure><h2 id="1-3-支持-Api"><a href="#1-3-支持-Api" class="headerlink" title="1.3 支持 Api"></a>1.3 支持 Api</h2><p>Selenium Webdriver 有很多的 Api可以调用，进行浏览器操作，举例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取一个页面 get 和 navigate 结果是一样的</span></span><br><span class="line"><span class="comment">// driver.navigate().to("http://www.baidu.com");</span></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找 UI 元素（web 元素）</span></span><br><span class="line"><span class="comment">// 根据元素 id 获取 ，对应 js 中 document.getElementById</span></span><br><span class="line">WebElement element = driver.findElement(By.id(<span class="string">"element_id"</span>));</span><br><span class="line"><span class="comment">// 根据元素 class 属性获取，对应 js 中的 document.getElementsByClassName</span></span><br><span class="line">List&lt;WebElement&gt; elementList = driver.findElements(By.className(<span class="string">"element_class"</span>));</span><br><span class="line"><span class="comment">// 根据元素标签名查找 ，对应 js 中的  document.getElementsByName</span></span><br><span class="line">WebElement iframe = driver.findElement(By.tagName(<span class="string">"iframe"</span>));</span><br><span class="line"><span class="comment">// 根据元素 css 属性</span></span><br><span class="line"><span class="comment">// 举例 html： &lt;div id="food"&gt;&lt;span class="dairy"&gt;milk&lt;/span&gt;&lt;span class="dairy aged"&gt;cheese&lt;/span&gt;&lt;/div&gt;</span></span><br><span class="line">WebElement cheese = driver.findElement(By.cssSelector(<span class="string">"#food span.dairy.aged"</span>));</span><br><span class="line"><span class="comment">// 筛选表单元素，对表单进行操作等，更多例子请参考：http://www.seleniumhq.org/docs/03_webdriver.jsp#selenium-webdriver-api-commands-and-operations</span></span><br></pre></td></tr></table></figure><p>有时候页面没加载完成，相应的元素并没有解析完成，通过 driver.findElement 的时候会报找不到<code>Element not found</code>的异常，这时候就需要进行等待一断时间后再获取该元素，实现此功能有两种方式<code>Explicit Waits</code> 和 <code>Implicit Waits</code>，区别在于前者每隔500ms都会去尝试获取该元素，直到设定的时间到后仍找不到，抛出<code>TimeoutException</code>，而后者会一直等待到指定的时间，才会尝试获取该元素，找不到抛出<code>Element not found</code>的异常，代码上相当于<code>Thread.sleep()</code>，所以推荐使用<code>Explicit Waits</code> 的方式才操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. Explicit Waits</span></span><br><span class="line"><span class="comment">// This waits up to 10 seconds before throwing a TimeoutException or if it finds the element will return it in 0 - 10 seconds. WebDriverWait by default calls the ExpectedCondition every 500 milliseconds until it returns successfully. A successful return is for ExpectedCondition type is Boolean return true or not null return value for all other ExpectedCondition types.</span></span><br><span class="line"></span><br><span class="line">WebDriver driver = <span class="keyword">new</span> FirefoxDriver();</span><br><span class="line">driver.get(<span class="string">"http://somedomain/url_that_delays_loading"</span>);</span><br><span class="line">WebElement myDynamicElement = (<span class="keyword">new</span> WebDriverWait(driver, <span class="number">10</span>))</span><br><span class="line">  .until(ExpectedConditions.presenceOfElementLocated(By.id(<span class="string">"myDynamicElement"</span>)));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. Implicit Waits</span></span><br><span class="line"><span class="comment">// An implicit wait is to tell WebDriver to poll the DOM for a certain amount of time when trying to find an element or elements if they are not immediately available. The default setting is 0. Once set, the implicit wait is set for the life of the WebDriver object instance.</span></span><br><span class="line"></span><br><span class="line">WebDriver driver = <span class="keyword">new</span> FirefoxDriver();</span><br><span class="line">driver.manage().timeouts().implicitlyWait(<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line">driver.get(<span class="string">"http://somedomain/url_that_delays_loading"</span>);</span><br><span class="line">WebElement myDynamicElement = driver.findElement(By.id(<span class="string">"myDynamicElement"</span>));</span><br></pre></td></tr></table></figure><h2 id="1-4-操作-cookie"><a href="#1-4-操作-cookie" class="headerlink" title="1.4 操作 cookie"></a>1.4 操作 cookie</h2><p>Selenium Webdriver 如何操作 cookie ？ 首先，你必须在 cookie 所在的域。如果你希望在加载一个大页面之前重设 cookie，你可以先访问站点中一个较小的页面，典型的是 404 页面 (<a href="http://example.com/some404page)。" target="_blank" rel="noopener">http://example.com/some404page)。</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 进到正确的域</span></span><br><span class="line">driver.get(<span class="string">"http://www.example.com"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置 cookie，这个cookie 对整个域都有效</span></span><br><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"key"</span>, <span class="string">"value"</span>);</span><br><span class="line">driver.manage().addCookie(cookie);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出当前 url 所有可用的 cookie</span></span><br><span class="line">Set&lt;Cookie&gt; allCookies = driver.manage().getCookies();</span><br><span class="line"><span class="keyword">for</span> (Cookie loadedCookie : allCookies) &#123;</span><br><span class="line">    System.out.println(String.format(<span class="string">"%s -&gt; %s"</span>, loadedCookie.getName(), loadedCookie.getValue()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你可以通过3中方式删除 cookie</span></span><br><span class="line"><span class="comment">// By name</span></span><br><span class="line">driver.manage().deleteCookieNamed(<span class="string">"CookieName"</span>);</span><br><span class="line"><span class="comment">// By Cookie</span></span><br><span class="line">driver.manage().deleteCookie(loadedCookie);</span><br><span class="line"><span class="comment">// Or all of them</span></span><br><span class="line">driver.manage().deleteAllCookies();</span><br></pre></td></tr></table></figure><p>真实测试环境中，有些网站是需要登录的，如果想要免登陆直接访问测试某些页面，就需要保持用户的登录态，也就是说需要传递cookie到服务端，一种方式就是获取到网站需要的cookie，通过上面的方法一个 key 一个 key 的设置，另外一种方法直接在 http request header 请求头中设置 cookie的值，比如这种：<br><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/selenium%2F1457264017455.png" alt="Alt text"></p><p>这依赖第三方开源组件<a href="https://github.com/lightbody/browsermob-proxy" target="_blank" rel="noopener">BrowserMobProxy</a> 来实现，它可以实现更改请求的 HTTP requests and responses，详情可以参考官网：<a href="https://bmp.lightbody.net/" target="_blank" rel="noopener">https://bmp.lightbody.net/</a> 。使用首选需要依赖相应的 jar 包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.lightbody.bmp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- To use the legacy, Jetty-based implementation,  change the artifactId to browsermob-core --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>browsermob-core-littleproxy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0-beta-4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span> <span class="comment">&lt;!-- test类中使用，非test去掉即可 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码使用如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testHttpHeader</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// start the proxy</span></span><br><span class="line">        BrowserMobProxy proxy = <span class="keyword">new</span> BrowserMobProxyServer();</span><br><span class="line">        proxy.start(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// get the Selenium proxy object</span></span><br><span class="line">        Proxy seleniumProxy = ClientUtil.createSeleniumProxy(proxy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// configure it as a desired capability</span></span><br><span class="line">        DesiredCapabilities capabilities = <span class="keyword">new</span> DesiredCapabilities();</span><br><span class="line">        capabilities.setCapability(CapabilityType.PROXY, seleniumProxy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// start the browser up</span></span><br><span class="line">        WebDriver driver = <span class="keyword">new</span> FirefoxDriver(capabilities);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 举例获取12306未完成订单</span></span><br><span class="line">        String url12306 = <span class="string">"https://kyfw.12306.cn/otn/queryOrder/initNoComplete"</span>;</span><br><span class="line">        <span class="keyword">final</span> String cookieValue = <span class="string">""</span>; <span class="comment">//登录后获取请求中cookie的那长串内容</span></span><br><span class="line">        proxy.addRequestFilter(<span class="keyword">new</span> RequestFilter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> HttpResponse <span class="title">filterRequest</span><span class="params">(HttpRequest request, HttpMessageContents contents, HttpMessageInfo messageInfo)</span> </span>&#123;</span><br><span class="line">                request.headers().add(<span class="string">"Cookie"</span>, cookieValue);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        driver.get(url12306);</span><br></pre></td></tr></table></figure><h1 id="二、高级用法"><a href="#二、高级用法" class="headerlink" title="二、高级用法"></a>二、高级用法</h1><p>高级用户交互API提供了一个更新更完善的机制来定义并描述用户在一个网页上的各种操作。这些操作包括：更改UA、拖拽、按住CTRL键选择多个元素等等。</p><h2 id="2-1-更改UA"><a href="#2-1-更改UA" class="headerlink" title="2.1 更改UA"></a>2.1 更改UA</h2><p>改变浏览器的 User Agent ，当使用 Firefox Driver 的时候这很容易：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FirefoxProfile profile = <span class="keyword">new</span> FirefoxProfile();</span><br><span class="line">profile.addAdditionalPreference(<span class="string">"general.useragent.override"</span>, <span class="string">"some UA string"</span>);</span><br><span class="line">WebDriver driver = <span class="keyword">new</span> FirefoxDriver(profile);</span><br></pre></td></tr></table></figure><p>为了生成一连串的动作，我们使用Actions来建立。这一系列的动作应该尽量的短。在使用中最好在执行一个简短的动作后验证页面是否处于正确的状态，然后再执行下面的动作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义动作</span></span><br><span class="line">Actions builder = <span class="keyword">new</span> Actions(driver);</span><br><span class="line">builder.keyDown(Keys.CONTROL)</span><br><span class="line">.click(someElement)</span><br><span class="line">.click(someOtherElement)</span><br><span class="line">.keyUp(Keys.CONTROL);</span><br><span class="line"><span class="comment">// 获取动作</span></span><br><span class="line">Action selectMultiple = builder.build();</span><br><span class="line"><span class="comment">// 执行动作</span></span><br><span class="line">selectMultiple.perform();</span><br></pre></td></tr></table></figure><h2 id="2-2-键盘交互（Keyboard-interactions）"><a href="#2-2-键盘交互（Keyboard-interactions）" class="headerlink" title="2.2 键盘交互（Keyboard interactions）"></a>2.2 键盘交互（Keyboard interactions）</h2><p>键盘交互是发生在一个特定的页面元素的，而webdriver会确保这个页面元素在执行键盘动作时处于正确的状态。这个正确的状态，包括页面元素滚动到可视区域并定位到这个页面元素。<br>既然这个新的API是面向用户（user-oriental）的接口，那么对于一个用户，在对一个元素输入文本前做显式的交互就更加的符合逻辑。这意味着，当想定位到相邻的页面元素时，可能需要点击一下元素或按下Tab（Keys.TAB）键。<br>The new interactions API will (first) support keyboard actions without a provided element. The additional work to focus on an element before sending it keyboard events will be added later on.</p><p>这块具体的内容及案例可以参考：<a href="http://docs.seleniumhq.org/docs/04_webdriver_advanced.jsp#advanceduserinteractions" target="_blank" rel="noopener">http://docs.seleniumhq.org/docs/04_webdriver_advanced.jsp#advanceduserinteractions</a> ，中文翻译在：<a href="https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/selenium-web-driver.html" target="_blank" rel="noopener">https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/selenium-web-driver.html</a></p><h2 id="2-3-通过代理实现抓取请求header、response等信息"><a href="#2-3-通过代理实现抓取请求header、response等信息" class="headerlink" title="2.3 通过代理实现抓取请求header、response等信息"></a>2.3 通过代理实现抓取请求header、response等信息</h2><p>通过使用 BrowserMob Proxy ，详细参考 Performance data collection using BrowserMob Proxy and Selenium：<a href="http://www.assertselenium.com/browsermob-proxy/performance-data-collection-using-browsermob-proxy-and-selenium/" target="_blank" rel="noopener">http://www.assertselenium.com/browsermob-proxy/performance-data-collection-using-browsermob-proxy-and-selenium/</a></p><h1 id="三、经常遇到的问题"><a href="#三、经常遇到的问题" class="headerlink" title="三、经常遇到的问题"></a>三、经常遇到的问题</h1><ol><li>selenium IeDriver 使用测试 IE11 浏览器后，调用代码 <code>driver.quit()</code> 方法后， <code>IEDriverServer.exe</code> 进程不退出，越来越多，导致内存不断增大最后崩溃。ff、chrome 浏览器并没有问题。 原因是 截图导致，去掉截图的代码就ok。</li><li>截图出现黑屏现象，图片全部是黑色的。webdriver截图黑屏原因：① window的远程桌面连接，连接到agent，然后退出远程连接，会被锁屏 ② window的睡眠时间设置成永不睡眠，否则睡眠后，截图是黑色的<br>解决方案：<br>1）、window的远程桌面连接，连接到agent，然后退出远程连接，会被锁屏，所以需要安装tightvnc，通过UltraVNC连接，这样关闭UltraVNC不会影响远程机<br>2）、UltraVNC 连接agent后，agent的窗口不会大屏的，总是显示800<em>600的，所以需要设置远程agent的分辨率，设置成1280</em>1024<br>3）、window的睡眠时间设置成永不睡眠，否则睡眠后，截图是黑色的</li></ol><p>参考资料：</p><ul><li>SeleniumHQ 官网：<a href="http://www.seleniumhq.org/" target="_blank" rel="noopener">http://www.seleniumhq.org/</a></li><li>Selenium document ：<a href="http://www.seleniumhq.org/docs/" target="_blank" rel="noopener">http://www.seleniumhq.org/docs/</a> ，中文翻译：<a href="https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/selenium-web-driver.html" target="_blank" rel="noopener">https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/selenium-web-driver.html</a></li><li>New selenium documentation：<a href="https://seleniumhq.github.io/docs/" target="_blank" rel="noopener">https://seleniumhq.github.io/docs/</a></li><li>Selenium Github：<a href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noopener">https://github.com/SeleniumHQ/selenium</a></li><li>Selenium Java Api：<a href="http://seleniumhq.github.io/selenium/docs/api/java/index.html" target="_blank" rel="noopener">http://seleniumhq.github.io/selenium/docs/api/java/index.html</a></li><li>Assert Selenium: <a href="http://www.assertselenium.com/" target="_blank" rel="noopener">http://www.assertselenium.com/</a></li><li>BrowserMob Proxy：<a href="https://github.com/lightbody/browsermob-proxy" target="_blank" rel="noopener">https://github.com/lightbody/browsermob-proxy</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img data-src=&quot;http://ixirong.oss-cn-beijing.aliyuncs.com/selenium%2F1457265240273.png&quot; alt=&quot;Selenium HQ&quot;&gt;&lt;/p&gt;
&lt;p&gt;SeleniumHQ 是一款基于浏览器开源的自动化测试组件，支持 win、linux、Mac 、Android、Ios 几大平台上的 IE、Firefox、Chrome 等浏览器，也支持模拟安卓、ios、winphone设置上的浏览器，「一切重复操作的流程均可自动化」，对测试来讲，大大提高测试程序对不同平台不同浏览器兼容性的效率。&lt;/p&gt;
&lt;p&gt;SeleniumHQ  2.0 组件包括 Selenium webdriver、Selenium IDE 两大组件，与之前的1.0版本有所区别（具体区别可以参考&lt;a href=&quot;https://wizardforcel.gitbooks.io/selenium-doc/content/official-site/introduction.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Selenium 发展历史&lt;/a&gt;）。使用Selenium IDE，可以通过安装Firefox浏览器插件，录制你所有的操作，也就是说，你操作一遍业务流程，后续的测试回归均可以交给 Selenium IDE 录制下来的程序去测试。优点就是简单，不需要编写代码，缺陷是如果业务流程发生了改变，需要重新录制脚本。使用Selenium Webdriver 可以编写代码，指定程序处理逻辑，比如 form 表单验证登录、提交返回结果验证等，功能强大，可以说能满足所有的场景。&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试" scheme="http://www.ixirong.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="http://www.ixirong.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="自动化" scheme="http://www.ixirong.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="开源组件" scheme="http://www.ixirong.com/tags/%E5%BC%80%E6%BA%90%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>「童年追忆」-李逍遥</title>
    <link href="http://www.ixirong.com/2016/01/24/notes-of-family-ship-jinanhaoxiangyin/"/>
    <id>http://www.ixirong.com/2016/01/24/notes-of-family-ship-jinanhaoxiangyin/</id>
    <published>2016-01-24T14:15:57.000Z</published>
    <updated>2016-01-24T14:35:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>赶巧看到了这个视频，老家济南的文艺节目「好乡音」参赛者李逍遥的《童年追忆》，歌词挺棒的，很温馨，快节奏的生活里面不要忘了对家人的关爱。</p><a id="more"></a><iframe class="iframe-video"  src="http://v.qq.com/iframe/player.html?vid=k01663snezx&tiny=0&auto=0" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;赶巧看到了这个视频，老家济南的文艺节目「好乡音」参赛者李逍遥的《童年追忆》，歌词挺棒的，很温馨，快节奏的生活里面不要忘了对家人的关爱。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="http://www.ixirong.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="亲情" scheme="http://www.ixirong.com/tags/%E4%BA%B2%E6%83%85/"/>
    
      <category term="生活" scheme="http://www.ixirong.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>squid 设置高度匿名代理</title>
    <link href="http://www.ixirong.com/2016/01/06/how-squid-hide-http-header/"/>
    <id>http://www.ixirong.com/2016/01/06/how-squid-hide-http-header/</id>
    <published>2016-01-06T03:36:18.000Z</published>
    <updated>2020-03-10T07:35:49.263Z</updated>
    
    <content type="html"><![CDATA[<p>代理服务器根据匿名程度可以区分为以下几种：</p><ol><li>高度匿名代理<br> 高度匿名代理会将我们的数据包原封不动的转发，在服务端看来就好像真的是一个普通客户端在访问，而记录的IP是代理服务器的IP。</li><li>普通匿名代理<br> 普通匿名代理会在数据包上做一些改动，服务端上有可能发现这是个代理服务器，也有一定几率追查到你的真实IP。代理服务器通常会加入的HTTP头有 <code>HTTP_VIA</code> 和 <code>HTTP_X_FORWARDED_FOR</code> 。</li><li>透明代理<br> 透明代理不但改动了我们的数据包，还会告诉服务器你的真实IP。这种代理除了能用缓存技术帮你提高浏览速度，能用内容过滤提高你的安全性之外，并无其他显著作用。（最常见的例子是：内网中的硬件防火墙）</li><li>间谍代理<br> 间谍代理指组织或个人建立的，用于记录使用者传输的数据，然后进行研究、监控等目的代理服务器。<a id="more"></a></li></ol><p>squid 可以通过在配置文件<code>/etc/squid/squid.conf</code> 文件中添加几行代码来实现 <strong>高度匿名代理</strong>的模式，具体方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Squid 2.x</span></span><br><span class="line">header_access Via deny all</span><br><span class="line">header_access X-Forwarded-For deny all</span><br><span class="line"></span><br><span class="line"><span class="comment">#Squid 3.0</span></span><br><span class="line">reply_header_access Via deny all</span><br><span class="line">reply_header_access X-Forwarded-For deny all</span><br><span class="line"></span><br><span class="line"><span class="comment">#Squid 3.1</span></span><br><span class="line">via off</span><br><span class="line">forwarded_for delete</span><br></pre></td></tr></table></figure><p>可以通过 <code>squid -version</code> 来查看自己的版本，修改完成后，重新加载下配置即可，不需要重启<code>squid -k reconfigure</code>。 检测工具 <a href="http://www.iprivacytools.com/proxy-checker-anonymity-test/" target="_blank" rel="noopener">http://www.iprivacytools.com/proxy-checker-anonymity-test/</a> ，通过此页面在设置前后访问即能看到效果。</p><p><img data-src="http://ixirong.oss-cn-beijing.aliyuncs.com/picnetwork/1452047997596.png" alt="Alt text"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代理服务器根据匿名程度可以区分为以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;高度匿名代理&lt;br&gt; 高度匿名代理会将我们的数据包原封不动的转发，在服务端看来就好像真的是一个普通客户端在访问，而记录的IP是代理服务器的IP。&lt;/li&gt;
&lt;li&gt;普通匿名代理&lt;br&gt; 普通匿名代理会在数据包上做一些改动，服务端上有可能发现这是个代理服务器，也有一定几率追查到你的真实IP。代理服务器通常会加入的HTTP头有 &lt;code&gt;HTTP_VIA&lt;/code&gt; 和 &lt;code&gt;HTTP_X_FORWARDED_FOR&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;透明代理&lt;br&gt; 透明代理不但改动了我们的数据包，还会告诉服务器你的真实IP。这种代理除了能用缓存技术帮你提高浏览速度，能用内容过滤提高你的安全性之外，并无其他显著作用。（最常见的例子是：内网中的硬件防火墙）&lt;/li&gt;
&lt;li&gt;间谍代理&lt;br&gt; 间谍代理指组织或个人建立的，用于记录使用者传输的数据，然后进行研究、监控等目的代理服务器。
    
    </summary>
    
    
      <category term="网络" scheme="http://www.ixirong.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="squid" scheme="http://www.ixirong.com/tags/squid/"/>
    
      <category term="网络" scheme="http://www.ixirong.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="代理" scheme="http://www.ixirong.com/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
</feed>
